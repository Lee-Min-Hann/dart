ÄÑaxisDirection
controllerphysicsviewportBuilderincrementCalculatorexcludeFromSemanticshitTestBehaviorsemanticChildCountdragStartBehaviorrestorationIdscrollBehaviorclipBehavioraxiscreateStatedebugFillPropertiesmaybeOfof"recommendDeferredLoadingForContextensureVisible
scrollablepositionupdateShouldNotify	_positionresolvedPhysics_physicsdeltaToScrollOrigin_effectiveScrollControllervsyncdevicePixelRatio_devicePixelRationotificationContextstorageContext_persistedScrollOffset_configuration_fallbackScrollController_mediaQueryGestureSettings_updatePositionrestoreState
saveOffset	initStatedidChangeDependencies_shouldUpdatePositiondidUpdateWidgetdispose_scrollSemanticsKeysetSemanticsActions_gestureDetectorKey_ignorePointerKey_gestureRecognizers_shouldIgnorePointer_lastCanDrag_lastAxisDirection
setCanDragsetIgnorePointer_drag_hold_handleDragDown_handleDragStart_handleDragUpdate_handleDragEnd_handleDragCancel_disposeHold_disposeDrag#_targetScrollOffsetForPointerScroll_pointerSignalEventDelta_receivedPointerSignal_handlePointerScroll _handleScrollMetricsNotification_buildChromebuild_performEnsureVisiblestatechild	registrar_selectionDelegate_kDefaultDragTargetSize%_kDefaultSelectToScrollVelocityScalar_autoScroller_scheduledLayoutChange _currentDragStartRelatedToOrigin_currentDragEndRelatedToOrigin_selectionStartsInScrollable_scheduleLayoutChange!_selectableStartEdgeUpdateRecords_selectableEndEdgeUpdateRecordsdidChangeSelectableshandleClearSelectionhandleSelectionEdgeUpdate_inferPositionRelatedToOrigin"_updateDragLocationsFromGeometrieshandleSelectAllhandleSelectWordhandleGranularlyExtendSelection"handleDirectionallyExtendSelection_jumpToEdge_globalPositionInScrollable_dragTargetFromEventdispatchSelectionEventToChildensureChildUpdatedallowImplicitScrollingcreateRenderObjectupdateRenderObject_allowImplicitScrolling_semanticChildCountdescribeSemanticsConfiguration
_innerNodeassembleSemanticsNodeclearSemanticscreateDefaultValuedidUpdateValuefromPrimitivestoPrimitivesenablednoneweightedEventweightedContinuousfreediagonalDragBehaviorhorizontalDetailsverticalDetails_verticalFallbackController_horizontalFallbackController_verticalOuterScrollableKey_horizontalInnerScrollableKeyverticalScrollablehorizontalScrollabletwoDimensionalScrollablehorizontalKey
lockedAxislastDragOffset_evaluateLockedAxisverticalOuterKeyViewportBuilderTwoDimensionalViewportBuilder_EnsureVisibleResults
Scrollable_ScrollableScopeScrollableState_ScrollableSelectionHandler _ScrollableSelectionHandlerState%_ScrollableSelectionContainerDelegate_getDeltaToScrollOrigin_ScrollSemantics_RenderScrollSemantics_RestorableScrollOffsetDiagonalDragBehaviorTwoDimensionalScrollableTwoDimensionalScrollableState_TwoDimensionalScrollableScope_VerticalOuterDimension_VerticalOuterDimensionState_HorizontalInnerDimension_HorizontalInnerDimensionStateÅû	ToleranceWidgetBuildContextViewportOffsetListFuturevoidViewportListViewGridViewCustomScrollViewofensureVisibleSingleChildScrollViewShrinkWrappingViewportScrollControllerScrollPositionPageViewPageControllerPageStoragekeepScrollOffsetPageStorageKeykey
ScrollViewScrollNotificationNotificationListenerStatefulWidgetAxisDirectiondownDragStartBehaviorstartCliphardEdgeHitTestBehavioropaqueaxisDirectionrightinitialScrollOffsetoffset	animateToScrollConfigurationScrollBehaviorscrollBehaviorScrollPhysicsphysicsAlwaysScrollableScrollPhysicsScrollActionScrollIncrementTypepagelineScrollIncrementCalculatorGestureDetectorexcludeFromSemanticsbool	separatedSemanticsConfigurationscrollChildCountintDragGestureRecognizerdragStartBehaviorRestorationBucketRestorationScopeRestorationManagerStringScrollableDetailsclipBehaviorAxisaxisDirectionToAxisoverrideDiagnosticPropertiesBuilderdebugFillPropertiesaddEnumPropertyDiagnosticsPropertyStringPropertyInheritedElement'getElementForInheritedWidgetOfExactTypewidget
scrollabledependOnInheritedElementcontextmaybeOfaxisFlutterError	fromPartsDiagnosticsNodeErrorSummaryErrorDescription	ErrorHintrecommendDeferredLoadingactivityScrollActivityvelocitygetInheritedWidgetOfExactTypepositiondoubleDurationzeroCurveCurveseaseScrollPositionAlignmentPolicyexplicitRenderObject_performEnsureVisiblefindRenderObject	alignmentdurationcurvealignmentPolicytargetRenderObjectaddAllisEmptyvaluelengthsinglewaitthenInheritedWidgetStateTickerProviderStateMixinRestorationMixinScrollContextcreateScrollPositionOffsetEdgeDraggingAutoScrolleruppixelsleft
controllerTickerProvidercurrentContextrestorationIdDeviceGestureSettingsgetScrollPhysicsapplyTodetachscheduleMicrotaskdisposeattachregisterForRestorationrestoreOffsetinitialRestore!debugIsSerializableForRestorationServicesBindinginstancerestorationManager	flushData	initState
MediaQuerymaybeGestureSettingsOfmaybeDevicePixelRatioOfViewdevicePixelRatiodidChangeDependenciesshouldNotifyruntimeTypeparentdidUpdateWidget	GlobalKey	protectedSetSemanticsActioncurrentStatereplaceSemanticsActionsRawGestureDetectorStateMapTypeGestureRecognizerFactoryverticalVerticalDragGestureRecognizer$GestureRecognizerFactoryWithHandlerssupportedDevicesdragDevicesonDownonStartonUpdateonEndonCancelminFlingDistanceminFlingVelocitymaxFlingVelocityvelocityTrackerBuildermultitouchDragStrategygetMultitouchDragStrategygestureSettings
horizontalHorizontalDragGestureRecognizerreplaceGestureRecognizersRenderIgnorePointerignoringDragScrollHoldControllerDragDownDetailsholdDragStartDetailsdragDragUpdateDetailsupdateDragEndDetailsendcancelminmaxminScrollExtentmaxScrollExtentPointerScrollEventLogicalKeyboardKeyHardwareKeyboardlogicalKeysPressedanypointerAxisModifierscontainskindPointerDeviceKindmouseflipAxisscrollDeltadxdyaxisDirectionIsReversedPointerSignalEventshouldAcceptUserOffsetrespondallowPlatformDefaultGestureBindingpointerSignalResolverregisterPointerScrollInertiaCancelEventpointerScrollPointerEventScrollMetricsNotificationdepthmarkNeedsSemanticsUpdate	directiondecorationClipBehaviorbuildScrollbarbuildOverscrollIndicatorchildListeneronPointerSignalRawGestureDetectorgesturesbehaviorhitTestBehavior	SemanticsexplicitChildNodesIgnorePointerviewportBuilderonNotificationallowImplicitScrollingsemanticChildCountSelectionRegistrarSelectionContainerstate	registrardelegate)MultiSelectableSelectionContainerDelegatevelocityScalaraddListenerremoveListenerSchedulerBindingaddPostFrameCallbacklayoutDidChange
debugLabelSelectionEdgeUpdateEvent
SelectableselectablestoSetremoveWheredidChangeSelectablesSelectionResultClearSelectionEventclearhandleClearSelectionglobalPositiontypeSelectionEventTypeendEdgeUpdate	translateforEndgranularityforStarthandleSelectionEdgeUpdatependingstopAutoScrollstartAutoScrollIfNecessary	scrolling	RenderBoxglobalToLocallocalToGlobalsizeheightwidthinfiniteMatrix4getTransformTocurrentSelectionStartIndexforceUpdateStartSelectionGeometryhasSelectionSelectionPointstartSelectionPointMatrixUtilstransformPointlocalPosition
lineHeightcurrentSelectionEndIndexforceUpdateEndendSelectionPointSelectAllSelectionEventhandleSelectAllSelectWordSelectionEventhandleSelectWordGranularlyExtendSelectionEventhandleGranularlyExtendSelectionisEnd!DirectionallyExtendSelectionEvent"handleDirectionallyExtendSelectionRectfromLTRB
edgeBottombottomedgeToptopjumpTofromLTWH
fromCentercenterSelectionEventstartEdgeUpdategranularlyExtendSelectiondirectionallyExtendSelectionremove	selectAll
selectWordselectParagraphdispatchSelectionEventToChildabsprecisionErrorTolerancedispatchSelectionEventSemanticsNodeRenderViewportexcludeFromScrollingRenderAbstractViewportuseTwoPaneSemanticsdescribeSemanticsConfigurationSingleChildRenderObjectWidgetRenderProxyBoxisSemanticBoundaryhaveDimensionshasImplicitScrollingscrollPositionscrollExtentMaxscrollExtentMinIterablefirstisTaggedassembleSemanticsNodeshowOnScreenrecthasFlagSemanticsFlagisHiddenindexInParentscrollIndex
updateWithconfigchildrenInInversePaintOrderclearSemanticsRestorableValuenotifyListenersObject
kTouchSlopTwoDimensionalViewportTwoDimensionalScrollViewnoneverticalScrollablehorizontalScrollable"dependOnInheritedWidgetOfExactTypetwoDimensionalScrollableScrollMetricsverticalDetailshorizontalDetailshorizontalKeyincrementCalculatordiagonalDragBehaviorverticalOuterKeyverticalOffsethorizontalOffsetweightedEventweightedContinuousfree_handleDragDown_handleDragStartsourceTimeStampdeltaprimaryDelta_handleDragUpdatepixelsPerSecondVelocityprimaryVelocity_handleDragEnd_handleDragCancel
setCanDrag_gestureRecognizersPanGestureRecognizer_configuration_physics_mediaQueryGestureSettings_lastCanDrag_lastAxisDirection_gestureDetectorKey_effectiveScrollControllerStatefulWidgetInheritedWidgetStateTickerProviderStateMixinRestorationMixinScrollContext)MultiSelectableSelectionContainerDelegateSingleChildRenderObjectWidgetRenderProxyBoxRestorableValue
ScrollableScrollableState9∫(ˇN…/(‚|ÌD4ìº Ñ
Ñ	Tolerance É‰package:flutter/physics.dart  Ä¶  
dart:async  Äª  ÄÕmathÄ–	dart:math  Äÿ  package:flutter/foundation.dart  Å  package:flutter/gestures.dart  Å*  package:flutter/rendering.dart  ÅS  package:flutter/scheduler.dart  Å|  package:flutter/services.dart  Å•  
basic.dart  Å∫  framework.dart  Å”  gesture_detector.dart  ÅÛ  media_query.dart  Ç  notification_listener.dart  Ç3  restoration.dart  ÇN  restoration_properties.dart  Çt  scroll_activity.dart  Çì  scroll_configuration.dart  Ç∑  scroll_context.dart  Ç’  scroll_controller.dart  Çˆ  scroll_physics.dart  É  scroll_position.dart  É3  scrollable_helpers.dart  ÉU  selectable_region.dart  Év  selection_container.dart  Éô  ticker_provider.dart  É∏  	view.dart  ÉÃ  viewport.dart    	dart:core¿ òâ ¿x≈âê <ÄÜÄ§Ä•Ä∫Ä÷Ä◊ÅÅ)ÅRÅ{Å£Å§ÅπÅ“ÅÚÇÇ2ÇMÇsÇíÇ∂Ç‘ÇıÉÉ2ÉTÉuÉòÉ∑ÉÀÉ„É‰ÑÑÑ3ÑQÑRÑùÑ¬ÖÖÖlÖõÜ.Ü/Ü\Ü_Ü•ÜÚáá`áaá±á⁄áﬁà)àwàªàøââ`â´â√â«ääbätäxäπäΩã
ãYãúãÊãÍå3åtåƒçççFçJçòçÈé5éÄéŒé“é‡é‰è-è]è≠è êê2êÄêûêÌê˚ëNëçë∑ë‹ëÒí í-íBíTíwíïíºíŸìì'ì@ìgìöì‡ì·îîNîTî¢îÚï;ïàïŸïıï˚ñ#ñ8ñ]ñ^ñññÁñ˜ñ˝óKóõóËò-ò|ò≈òÍòô?ôyôôèôïô‡öööCöDöyö≠ö≥öˇõ*õ0õ~õßõ≠õ‚ú3újúpúΩùù^ùßù˜ûFûhûnû~ûÑû’ü#üuüäü™ü´ü¯ü˛†O†é†î†§†™†Ù°C°á°∞°±°Ú¢>¢ã¢°¢ß¢Û£D£{£Å£π§§@§U§ç§é§–••:•@•ê•‹¶&¶;¶A¶Q¶W¶®¶º¶ﬂ¶‡ßßgßmßΩßÛ®®®®$®k®î®ï®›®„©3©9©Ö©–™™"™n™µ™ª™À™—´´p´ë´í´È¨(¨f¨l¨¥≠ ≠J≠i≠o≠∫ÆÆ9Æ?ÆáÆçÆùÆ£ÆÚØØØ/Ø\Ø]ØòØÊØÏ∞;∞x∞~∞…±±±+±1±~±ê±•±ƒ±≈±˙≤ ≤E≤é≤“≤Í≥≥≥I≥O≥r≥x≥–¥#¥i¥Ñ¥Ö¥π¥ø¥Ëµµ µ,µbµcµoµ¥µﬂ∂0∂|∂¿∂ƒ∂≈∑∑>∑D∑g∑m∑{∑º∑∆∑Ã∏∏_∏´∏—∏◊π%πuπ¬πﬂπÂ∫1∫Å∫ú∫¢∫≤∫∏∫˛ª,ªvªΩªÔºTºrºÃΩΩ[ΩñΩ±ΩπΩ›æ2æ8æIæMæNæûæ≠æ≥æ÷æ‹æÍø%ø/ø5øÅø»¿ @¿ @:¿ @@¿ @é¿ @ﬁ¿ A(¿ A.¿ Az¿ A ¿ AÂ¿ AÎ¿ B7¿ Bq¿ Bw¿ Bá¿ Bç¿ B›¿ C¿ CO¿ Cö¿ C™¿ Cœ¿ D¿ D¿ Dp¿ Dí¿ Dü¿ Dª¿ D˜¿ E<¿ Eé¿ E„¿ F¿ F@¿ FZ¿ Fg¿ Fé¿ F‚¿ G¿ G¿ G'¿ G/¿ GB¿ GL¿ Gi¿ Gm¿ Gn¿ Gø¿ G˝¿ H¿ HQ¿ H¢¿ HÚ¿ H¯¿ IE¿ Iî¿ I›¿ I„¿ J1¿ Jz¿ Jƒ¿ JÁ¿ JÌ¿ K<¿ KX¿ K±¿ L¿ L(¿ LÇ¿ Lƒ¿ LÃ¿ L˜¿ MA¿ MG¿ MY¿ M]¿ M^¿ M≠¿ M ¿ M–¿ N¿ N^¿ NÄ¿ N•¿ N¡¿ N›¿ O¿ O#¿ O¿ OÜ¿ Oø¿ O¿¿ P¿ P^¿ P≠¿ PÚ¿ Q!¿ Q(¿ Qh¿ Qé¿ QÕ¿ QÓ¿ R¿ R\¿ RÅ¿ Rü¿ Rª¿ R—¿ R˚¿ S+¿ S4¿ SV¿ SW¿ Sê¿ S¥¿ S‰¿ SÍ¿ SÎ¿ T#¿ TF¿ TL¿ Tk¿ Tà¿ Té¿ Tÿ¿ T‹¿ Tﬁ¿ Tﬂ¿ U0¿ Uq¿ U¢¿ UΩ¿ U€¿ U˜¿ V¿ V¿ V¿ V<¿ V]¿ V^¿ Vj¿ Vú¿ V¡¿ V≈¿ V«¿ V»¿ VÙ¿ V¯¿ WB¿ Wm¿ Wq¿ W∂¿ X¿ X¿ XX¿ Xç¿ XÌ¿ Y¿ Y¿ Y¿ Y¿ Y_¿ Ye¿ Y≥¿ Z ¿ ZN¿ Z{¿ Zò¿ Zô¿ Z÷¿ [¿ [#¿ [$¿ [s¿ [µ¿ [ª¿ \¿ \C¿ \f¿ \ä¿ \ƒ¿ \˝¿ ]7¿ ]p¿ ]w¿ ]{¿ ]|¿ ]‚¿ ]„¿ ]Ô¿ ^*¿ ^+¿ ^7¿ ^[¿ ^\¿ ^h¿ ^ú¿ ^Ω¿ ^æ¿ ^ ¿ _¿ _¿ _&¿ _T¿ _U¿ _a¿ _ñ¿ _Í¿ _Î¿ `¿ `@¿ `u¿ `v¿ `æ¿ `Ÿ¿ a(¿ aa¿ aÉ¿ a∑¿ aÁ¿ b<¿ bB¿ bu¿ bî¿ b ¿ c¿ cc¿ cô¿ c«¿ cÕ¿ cŒ¿ d-¿ dL¿ d}¿ dÅ¿ dÇ¿ dé¿ d◊¿ e¿ e4¿ ed¿ e¡¿ e«¿ eÀ¿ eÃ¿ eÿ¿ e˚¿ f2¿ f]¿ f®¿ f¿ g-¿ g1¿ g2¿ g>¿ gS¿ gx¿ gÆ¿ g¥¿ gÀ¿ gœ¿ g–¿ g‹¿ g˝¿ hJ¿ h¥¿ hÀ¿ hÓ¿ hÚ¿ hÛ¿ i(¿ iy¿ iå¿ ií¿ j!¿ j4¿ j:¿ jû¿ k¿ k¿ kQ¿ kf¿ kn¿ kï¿ kº¿ kÙ¿ kı¿ lE¿ lI¿ lJ¿ lV¿ lÖ¿ l´¿ l¨¿ l·¿ m¿ mX¿ m|¿ mØ¿ m⁄¿ n¿ n=¿ ng¿ nv¿ n™¿ n⁄¿ o¿ oN¿ om¿ oß¿ o±¿ oπ¿ oÚ¿ p%¿ p+¿ p,¿ pX¿ pq¿ pw¿ p{¿ p|¿ pà¿ põ¿ p¿¿ pÎ¿ p¯¿ q+¿ qW¿ q]¿ q^¿ qv¿ qú¿ q±¿ qµ¿ q∂¿ q≈¿ q∆¿ q˚¿ q¸¿ r¿ r¿ rP¿ rÑ¿ rŒ¿ r‘¿ rÿ¿ rŸ¿ s¿ s¿ so¿ s¢¿ s£¿ s¯¿ t^¿ tÉ¿ tÑ¿ tö¿ t∂¿ t∑¿ t√¿ t–¿ t¿ uB¿ uP¿ uV¿ uh¿ uÆ¿ u¸¿ vF¿ vÑ¿ vü¿ v¨¿ v…¿ vÂ¿ w'¿ wó¿ w¯¿ x1¿ xJ¿ xw¿ x¶¿ x◊¿ y¿ y3¿ yu¿ y∑¿ y˘¿ zU¿ zñ¿ zı¿ {6¿ {y¿ {ä¿ {ô¿ {¶¿ {ƒ¿ |¿ |z¿ |›¿ }¿ }1¿ }^¿ }ç¿ }æ¿ }È¿ ~¿ ~\¿ ~û¿ ~‡¿ <¿ }¿ ‹¿ Ä¿ Ä`¿ Äq¿ ÄÄ¿ Äç¿ Äï¿ Äõ¿ Äµ¿ Ä€¿ Å¿ Åg¿ Åm¿ Åq¿ År¿ Å~¿ Åã¿ Å±¿ Å⁄¿ ÅË¿ ÅÓ¿ Ç¿ ÇD¿ Çæ¿ ÇÔ¿ Çı¿ Ç˘¿ Ç˙¿ É¿ É¿ É¿ É=¿ É>¿ Ép¿ Éã¿ É¶¿ Éœ¿ É”¿ É‘¿ Ñ¿ ÑR¿ Ñ£¿ ÑÃ¿ ÑÁ¿ Ö¿ Ö4¿ ÖO¿ ÖS¿ ÖT¿ Öä¿ ÖŸ¿ Ü¿ Ü!¿ Ü%¿ Ü&¿ ÜV¿ Ü•¿ Ü—¿ ÜÍ¿ á¿ á	¿ á
¿ á'¿ á]¿ á´¿ áÙ¿ à¿ à¿ à¿ àK¿ àö¿ à∆¿ à€¿ à¿ â¿ â&¿ â*¿ â+¿ âC¿ âU¿ âY¿ âZ¿ âr¿ âÑ¿ âà¿ ââ¿ âõ¿ âú¿ âÏ¿ ä&¿ äc¿ äx¿ äª¿ ä€¿ ä‚¿ äÊ¿ äÁ¿ ã2¿ ã¿ ãç¿ ãÀ¿ å%¿ å|¿ åª¿ ç¿ çY¿ çß¿ çÙ¿ é¿ é0¿ é1¿ éw¿ é†¿ éœ¿ é˛¿ è¿ è¿ èQ¿ èU¿ èV¿ èê¿ èÃ¿ ê¿ êh¿ êè¿ ê¬¿ ê“¿ ê⁄¿ ë¿ ëj¿ ëø¿ í¿ í_¿ ío¿ íw¿ í«¿ íÏ¿ ì¿ ìX¿ ìy¿ ì—¿ ì◊¿ ì€¿ ì‹¿ î¿ î7¿ îá¿ îŸ¿ ï¿ ï?¿ ïE¿ ïI¿ ïJ¿ ïú¿ ïø¿ ñ/¿ ñ`¿ ñ†¿ ñ®¿ ñÆ¿ ñ¿¿ ñƒ¿ ñ≈¿ ó¿ ó:¿ óa¿ óè¿ ó¬¿ ó…¿ ó ¿ óÙ¿ ò¿ òK¿ òZ¿ òa¿ òe¿ òf¿ òw¿ òx¿ òÑ¿ ò´¿ ò ¿ ô(¿ ôo¿ ôv¿ ôû¿ ô…¿ ô–¿ ö.¿ ör¿ öò¿ ö∞¿ ö ¿ ö·¿ õ¿ õ5¿ õY¿ õÇ¿ õÆ¿ õÎ¿ ú¿ úE¿ úg¿ úç¿ úª¿ ú˚¿ ù
¿ ù¿ ù"¿ ù+¿ ù2¿ ù3¿ ù[¿ ùõ¿ ù’¿ ùˆ¿ û¿ û8¿ û|¿ ûµ¿ ûŒ¿ ûÿ¿ û·¿ ûÁ¿ ûË¿ ü¿ ü¿ üX¿ üß¿ üƒ¿ ü¿ †¿ †!¿ †?¿ †V¿ †_¿ †e¿ †f¿ †y¿ †}¿ †~¿ †Ã¿ °¿ °^¿ °ç¿ °®¿ °ƒ¿ °Î¿ ¢
¿ ¢f¿ ¢å¿ ¢ì¿ ¢ÿ¿ ¢Ê¿ £¿ £¿ £0¿ £X¿ £Ü¿ £ç¿ £«¿ £À¿ £Ã¿ £ÿ¿ §¿ §H¿ §ò¿ §Ô¿ §Û¿ §ı¿ §ˆ¿ •)¿ •-¿ •j¿ •¨¿ •Á¿ ¶¿ ¶&¿ ¶B¿ ¶_¿ ¶x¿ ¶~¿ ¶¿ ¶û¿ ¶ø¿ ¶’¿ ¶˚¿ ¶¸¿ ß¿ ß`¿ ßb¿ ßc¿ ß∑¿ ß¯¿ ß˘¿ ®¿ ®¿ ®1¿ ®q¿ ®å¿ ®≠¿ ®¥¿ ®∏¿ ®π¿ ®≈¿ ©¿ ©+¿ ©\¿ ©ë¿ ©ó¿ ©õ¿ ©ú¿ ©®¿ ©ª¿ ©›¿ ©Ú¿ ©ˆ¿ ©˜¿ ™¿ ™*¿ ™I¿ ™l¿ ™ê¿ ™´¿ ™≤¿ ™∂¿ ™∏¿ ™π¿ ´¿ ´3¿ ´7¿ ´á¿ ´ÿ¿ ¨#¿ ¨3¿ ¨ì¿ ¨Ω¿ ¨÷¿ ¨˚¿ ≠¿ ≠à¿ ≠∫¿ ≠æ¿ ≠ø¿ ≠ˇ¿ Æ2¿ Æ3¿ Æj¿ Æ¨¿ Æ≠¿ ÆÃ¿ Æ¸¿ Ø#¿ ØO¿ Øy¿ Øz¿ ØÀ¿ Ø¯¿ Ø˘¿ ∞%¿ ∞A¿ ∞h¿ ∞Ü¿ ∞î¿ ∞ö¿ ∞œ¿ ∞Ê¿ ±¿ ±¿ ±¿ ±g¿ ±ß¿ ±»¿ ±Í¿ ±¯¿ ±˛¿ ≤!¿ ≤k¿ ≤ê¿ ≤†¿ ≤®¿ ≤Œ¿ ≤Á¿ ≥+¿ ≥/¿ ≥0¿ ≥s¿ ≥ï¿ ≥õ¿ ≥Á¿ ¥	¿ ¥¿ ¥_¿ ¥Æ¿ ¥˚¿ µL¿ µ]¿ µc¿ µ±¿ ∂¿ ∂R¿ ∂ë¿ ∂Ì¿ ∑G¿ ∑H¿ ∑T¿ ∑t¿ ∑≥¿ ∏&¿ ∏ó¿ ∏π¿ ∏Ω¿ ∏æ¿ ∏ ¿ π¿ π=¿ πj¿ πó¿ π¬¿ πÏ¿ ∫¿ ∫¿ ∫¿ ∫+¿ ∫y¿ ∫◊¿ ª¿ ª\¿ ªb¿ ª£¿ ª›¿ º9¿ º©¿ Ω¿ Ω ¿ Ω~¿ ΩÚ¿ æ`¿ æf¿ æ±¿ æ≤¿ ø¿ øU¿ øg¿ øî¿ ø∫¿ øœ¿ ø’¿ ø˝¿ ¿J¿ ¿o¿ ¿ó¿ ¿ü¿ ¿•¿ ¿∏¿ ¿º¿ ¿Ω¿ ¿˝¿ ¡G¿ ¡ã¿ ¡¥¿ ¬¿ ¬R¿ ¬¢¿ ¬Ú¿ √,¿ √[¿ √c¿ √∏¿ √ÿ¿ √‡¿ √Ê¿ ƒ'¿ ƒÇ¿ ƒÜ¿ ƒá¿ ƒø¿ ƒ˘¿ ƒˇ¿ ≈N¿ ≈Ñ¿ ≈“¿ ∆¿ ∆|¿ ∆Ω¿ «¿ «?¿ «≠¿ »¿ »*¿ »l¿ »Œ¿ …¿ …&¿ …g¿ …p¿ …‡¿ …Ê¿  N¿  §¿  …¿ À¿ Àg¿ À•¿ ÀΩ¿ À˙¿ Ã¿ Ão¿ Ãu¿ Ãy¿ Ãz¿ ÃÜ¿ Ã…¿ ÃÙ¿ Õ5¿ Õâ¿ Õµ¿ Õ·¿ ÕÁ¿ Õ˙¿ Õ˛¿ Õˇ¿ Œ¿ ŒP¿ Œ¶¿ ŒË¿ œ¿ œ%¿ œ)¿ œ*¿ œ6¿ œê¿ œ·¿ –.¿ –}¿ –º¿ –‰¿ —
¿ —-¿ —4¿ —\¿ —|¿ —Ç¿ —ï¿ —ô¿ —ö¿ —¶¿ “¿ “Z¿ “ß¿ “ˆ¿ ”5¿ ”]¿ ”É¿ ”¶¿ ”≠¿ ”’¿ ”ı¿ ”˚¿ ‘¿ ‘¿ ‘¿ ‘7¿ ‘X¿ ‘v¿ ‘ñ¿ ‘™¿ ‘‰¿ ’¿ ’X¿ ’e¿ ’°¿ ’‘¿ ÷¿ ÷¿ ÷M¿ ÷[¿ ÷a¿ ÷µ¿ ÷˝¿ ◊m¿ ◊◊¿ ◊˙¿ ÿ¿ ÿ_¿ ÿ±¿ Ÿ¿ Ÿ¿ Ÿ!¿ ŸS¿ Ÿ§¿ Ÿ∂¿ Ÿ¿¿ ŸÏ¿ ⁄7¿ ⁄A¿ ⁄Q¿ ⁄q¿ ⁄≥¿ ⁄˛¿ €¿ €¿ €E¿ €è¿ €°¿ €´¿ €’¿ ‹¿ ‹(¿ ‹8¿ ‹W¿ ‹ü¿ ‹Ò¿ ›E¿ ›W¿ ›a¿ ›ì¿ ›‰¿ ›ˆ¿ ﬁ ¿ ﬁ,¿ ﬁw¿ ﬁÅ¿ ﬁë¿ ﬁ∞¿ ﬁÚ¿ ﬂ=¿ ﬂO¿ ﬂY¿ ﬂÑ¿ ﬂŒ¿ ﬂ‡¿ ﬂÍ¿ ‡¿ ‡]¿ ‡g¿ ‡w¿ ‡}¿ ‡Å¿ ‡Ç¿ ‡æ¿ ·¿ ·L¿ ·ò¿ ·¡¿ ·≈¿ ·∆¿ ‚¿ ‚¿ ‚É¿ ‚Ñ¿ ‚ê¿ ‚Ô¿ „	¿ „8¿ „á¿ „Ø¿ „‹¿ ‰)¿ ‰Q¿ ‰ä¿ ‰∆¿ ‰Ó¿ Â=¿ Âä¿ ÂØ¿ ÂÎ¿ Ê)¿ ÊR¿ Ê|¿ Ê´¿ Ê¯¿ ÁG¿ ÁM¿ Áê¿ Áî¿ Áï¿ Á°¿ Á‘¿ Ë¿ Ë_¿ Ëì¿ È¿ È:¿ È}¿ ÈÒ¿ ÍZ¿ Í≤¿ ÍË¿ Î5¿ Î;¿ Îé¿ Î¿¿ Ï*¿ Ïc¿ Ï¶¿ Ì¿ Ì{¿ Ì“¿ Ó¿ ÓS¿ ÓY¿ Ó]¿ Ó^¿ Ój¿ Ó}¿ Ó¨¿ ÓŸ¿ Ó˝¿ Ô!¿ Ô6¿ Ô:¿ Ô<¿ Ô=¿ Ô¿ Ô±¿ Ô˘¿ @¿ à¿ œ¿ ‘¿ ÷¿ ◊¿ Ò¿ ÒW¿ Ò[¿ Òñ¿ Ò‰¿ Ú+¿ ÚV¿ Úâ¿ Úç¿ Ú›¿ Û+¿ Û{¿ Û√¿ Û‹¿ Ù¿ Ù6¿ ÙE¿ Ùa¿ Ùã¿ Ù±¿ Ù¬¿ ı¿ ı	¿ ı*¿ ıO¿ ıp¿ ıq¿ ı}¿ ı¡¿ ı‰¿ ı˛¿ ˆ4¿ ˆb¿ ˆi¿ ˆm¿ ˆn¿ ˆz¿ ˆ—¿ ˆ‚¿ ˜¿ ˜6¿ ˜g¿ ˜k¿ ˜m¿ ˜n¿ ˜§¿ ˜ø¿ ˜Â¿ ¯¿ ¯5¿ ¯K¿ ¯h¿ ¯°¿ ¯“¿ ¯Ë¿ ˘¿ ˘ ¿ ˘!¿ ˘f¿ ˘í¿ ˘Æ¿ ˘’¿ ˘Û¿ ˙¿ ˙¿ ˙?¿ ˙V¿ ˙ã¿ ˙´¿ ˙Ø¿ ˙∞¿ ˙‰¿ ˚"¿ ˚B¿ ˚m¿ ˚ô¿ ˚ß¿ ˚≠¿ ˚“¿ ˚Ú¿ ˚ˆ¿ ˚˜¿ ¸-¿ ¸I¿ ¸p¿ ¸ó¿ ¸•¿ ¸´¿ ¸Ã¿ ¸Ï¿ ¸¿ ¸Ò¿ ¸˝¿ ˝D¿ ˝v¿ ˝ú¿ ˝ø¿ ˝Ã¿ ˛¿ ˛4¿ ˛l¿ ˛§¿ ˛◊¿ ˛›¿ ˛·¿ ˛‚¿ ˛ˇ¿ ˇ ¿ ˇ¿ ˇÄ¿ ˇ‹¿ ˇı¿ 0¿ >¿ D¿ E¿ ñ¿ ó¿ ≥¿ ˙¿6¿h¿™¿Î¿¿¿M¿Ç¿å¿©¿±¿∑¿„¿-¿Ä¿Ñ¿Ö¿ë¿´¿«¿ﬁ¿‚¿‰¿Â¿7¿E¿Ü¿í¿∫¿ª¿«¿Ò¿¿¿¿¿A¿]¿a¿b¿n¿â¿õ¿ü¿†¿¨¿—¿”¿‘¿‰¿Â¿&¿F¿ô¿µ¿Ù¿˙¿K¿j¿r¿s¿∏¿◊¿›¿-¿|¿ç¿é¿”¿	¿	¿	_¿	°¿	µ¿	À¿	Ã¿
¿
$¿
,¿
.¿
/¿
w¿
¡¿
ÿ¿
‹¿-¿t¿∞¿˜¿¿¿W¿¶¿ﬁ¿‚¿¿Ù¿?¿v¿«¿’¿¿D¿J¿õ¿™¿Õ¿‹¿¿$¿G¿e¿}¿§¿ﬂ¿¿H¿N¿O¿ú¿∞¿„¿‰¿¿"¿j¿∂¿„¿‰¿¿ ¿h¿≤¿›¿ﬁ¿+¿1¿Ä¿ ¿–¿‡¿Ê¿5¿Z¿ë¿í¿–¿÷¿˝¿5¿6¿n¿t¿∂¿¿E¿d¿e¿§¿™¿—¿Ù¿ı¿/¿5¿\¿Ö¿Ü¿¬¿»¿Ô¿¿¿)¿}¿~¿Œ¿˜¿˝¿ ¿&¿4¿ë¿õ¿°¿„¿1¿Ç¿¬¿»¿¿=¿C¿S¿Y¿•¿€¿#¿§¿—¿’¿÷¿&¿5¿;¿^¿d¿r¿…¿”¿Ÿ¿¿i¿∫¿˙¿ ¿P¿î¿ö¿Î¿ 
¿ ¿  ¿ &¿ s¿ ¿¿!¿!O¿!_¿!Ñ¿!º¿!‘¿"%¿"d¿"q¿"ç¿"‡¿#2¿#Å¿#—¿#˜¿$¿$¿$*¿$2¿$E¿$O¿$l¿$p¿$r¿$s¿$≠¿$±¿%¿%R¿%`¿%d¿%±¿%˜¿&?¿&Ç¿&¥¿'¿'3¿'f¿'≈¿(&¿('¿(Y¿(_¿(ö¿(†¿(Ó¿)¿)8¿)v¿)¨¿)∞¿)±¿)Â¿)Î¿*&¿*,¿*|¿*õ¿*»¿+¿+@¿+D¿+E¿+Q¿+f¿+õ¿+”¿+Ÿ¿,¿,J¿,P¿,g¿,k¿,l¿,x¿,µ¿,€¿-¿-¿-.¿-É¿-Ω¿.
¿..¿.c¿.û¿.Œ¿.˙¿/8¿/Å¿/û¿/”¿0¿0¿0¿0¿0.¿0á¿0√¿1¿14¿1k¿1®¿1⁄¿2¿2H¿2ë¿2Æ¿2Â¿3!¿3)¿3/¿33¿34¿3@¿3g¿3s¿3¡¿4	¿4¿4¿4n¿4∫¿4¡¿4¬¿4Ó¿5¿5?¿5i¿5ã¿5¡¿5˙¿60¿6[¿6å¿6∆¿7¿7¿7V¿7ë¿7—¿8¿8A¿8r¿8√¿8Ô¿9¿9Z¿9ô¿9’¿:¿:=¿:}¿:æ¿:ﬁ¿;¿;Z¿;†¿;Ÿ¿<¿<M¿<§¿<¸¿=¿=¿="¿=*¿=1¿=2¿=w¿=∞¿=±¿=‹¿>¿>¿>¿>"¿>#¿>/¿>B¿>n¿>ú¿>±¿>µ¿>∑¿>∏¿>Ó¿?(¿?e¿?à¿?«¿?¿@¿@6¿@<¿@=¿@}¿@~¿@ä¿@“¿@‘¿@’¿A¿A5¿AW¿Af¿Aá¿A´¿AÕ¿A„¿Aˆ¿B¿B-¿BM¿Bj¿BÉ¿Bû¿BŸ¿C2¿C3¿Cf¿Cò¿Cô¿C•¿Cı¿C˜¿C¯¿D5¿D¢¿E¿E¿E&¿E@¿EA¿E|¿Eà¿E∑¿E“¿EÓ¿F¿F4¿Fê¿F∂¿FΩ¿F…¿F÷¿G'¿Gx¿Gû¿G•¿G ¿GŒ¿Gœ¿G˚¿H¿HX¿H©¿HŸ¿H˛¿IK¿IX¿Iq¿Iw¿I{¿I|¿Ià¿I∫¿Iﬁ¿J¿J¿JB¿Jv¿Jú¿JÁ¿K¿K8¿K>¿Kb¿Kf¿Kg¿Ks¿Kß¿K‘¿K¯¿L¿L-¿LS¿Lv¿L∞¿LË¿M¿MK¿Mu¿M™¿M»¿M›¿N¿N\¿Nò¿N∏¿NÁ¿O#¿O7¿OU¿Oß¿O±¿O∑¿O‹¿O‡¿O·¿OÌ¿P#¿Ph¿Pò¿Pƒ¿PÍ¿Q¿QD¿QK¿Qí¿Q¬¿QÓ¿R¿RB¿Rn¿Ru¿Rv¿Rö¿R¿¿Rˆ¿S,¿S<¿Sb¿S~¿S≈¿S˚¿T¿T?¿Tt¿T©¿T⁄¿U	¿U5¿Uq¿U¢¿U—¿V¿V¿V¿V2¿VC¿Vr¿Vπ¿V’¿VÙ¿W;¿WK¿We¿Wë¿Wó¿W…¿WÕ¿WŒ¿W⁄¿X
¿X%¿X<¿Xw¿X≤¿XÒ¿Y-¿YH¿YO¿Yê¿YÃ¿YÁ¿YÓ¿YÔ¿Z¿Z9¿ZH¿Zw¿Z´¿Z—¿[¿[¿[J¿[N¿[O¿[[¿[x¿[ì¿[™¿[Œ¿[Ù¿\¿\2¿\f¿\å¿\æ¿\ƒ¿\„¿\Á¿\Ë¿\Ù¿]¿]8¿]^¿]∞¿]ƒ¿]Â¿]ı¿^$¿^X¿^~¿^ì¿^‚¿_/¿_y¿_»¿_¿`2¿`ê¿`Ë¿a¿a1¿a^¿aç¿aæ¿aÈ¿b¿b\¿bû¿b‡¿c<¿c}¿cø¿c–¿cﬂ¿cÏ¿d>¿då¿dŒ¿dÌ¿e¿e9¿es¿e—¿e›¿eÁ¿e˜¿e˝¿f¿f¿f¿fJ¿fÉ¿f™¿fÿ¿g¿g¿gN¿gt¿g¡¿g≈¿g«¿g»¿g˜¿h,¿hP¿h_¿hÉ¿hß¿h…¿hﬂ¿hÚ¿i
¿i)¿iI¿if¿i¿iö¿i’¿j1¿j2¿jg¿jö¿jõ¿jß¿j˚¿j˝¿j˛¿k=¿kh¿ki¿k÷¿lE¿lF¿lR¿ls¿l§¿l¯¿m¿m¿m ¿mn¿m∫¿n¿n¿nC¿n^¿nz¿n°¿n¿¿o¿oB¿oI¿oÉ¿o°¿o±¿oœ¿oÎ¿p¿p+¿p4¿pe¿pu¿pì¿pØ¿p≈¿pÔ¿p¯¿pˇ¿q ¿q-¿q1¿q2¿q>¿q^¿qÇ¿q®¿qÔ¿r¿r/¿r?¿rn¿r¢¿r»¿r›¿s(¿sw¿s»¿t¿td¿tÆ¿tÍ¿u<¿uä¿uÃ¿uÎ¿v¿v7¿vq¿vœ¿v€¿vÂ¿vı¿v˚¿vˇ¿w ¿w¿wH¿wÅ¿w®¿w÷¿wˇ¿x¿xL¿xr¿xø¿x√¿x≈    Ä•  Ä∫Ä— Ä◊  Å  Å)  ÅR  Å{  Å§  Åπ  Å“  ÅÚ  Ç  Ç2  ÇM  Çs  Çí  Ç∂  Ç‘  Çı  É  É2  ÉT  Éu  Éò  É∑  ÉÀ  É‰Ñ
Ñ áa¿ M|ëìä+/// A widget that manages scrolling in one dimension and informs the [Viewport]
/// through which the content is viewed.
///
/// [Scrollable] implements the interaction model for a scrollable widget,
/// including gesture recognition, but does not have an opinion about how the
/// viewport, which actually displays the children, is constructed.
///
/// It's rare to construct a [Scrollable] directly. Instead, consider [ListView]
/// or [GridView], which combine scrolling, viewporting, and a layout model. To
/// combine layout models (or to use a custom layout mode), consider using
/// [CustomScrollView].
///
/// The static [Scrollable.of] and [Scrollable.ensureVisible] functions are
/// often used to interact with the [Scrollable] widget inside a [ListView] or
/// a [GridView].
///
/// To further customize scrolling behavior with a [Scrollable]:
///
/// 1. You can provide a [viewportBuilder] to customize the child model. For
///    example, [SingleChildScrollView] uses a viewport that displays a single
///    box child whereas [CustomScrollView] uses a [Viewport] or a
///    [ShrinkWrappingViewport], both of which display a list of slivers.
///
/// 2. You can provide a custom [ScrollController] that creates a custom
///    [ScrollPosition] subclass. For example, [PageView] uses a
///    [PageController], which creates a page-oriented scroll position subclass
///    that keeps the same page visible when the [Scrollable] resizes.
///
/// ## Persisting the scroll position during a session
///
/// Scrollables attempt to persist their scroll position using [PageStorage].
/// This can be disabled by setting [ScrollController.keepScrollOffset] to false
/// on the [controller]. If it is enabled, using a [PageStorageKey] for the
/// [key] of this widget (or one of its ancestors, e.g. a [ScrollView]) is
/// recommended to help disambiguate different [Scrollable]s from each other.
///
/// See also:
///
///  * [ListView], which is a commonly used [ScrollView] that displays a
///    scrolling, linear list of child widgets.
///  * [PageView], which is a scrolling list of child widgets that are each the
///    size of the viewport.
///  * [GridView], which is a [ScrollView] that displays a scrolling, 2D array
///    of child widgets.
///  * [CustomScrollView], which is a [ScrollView] that creates custom scroll
///    effects using slivers.
///  * [SingleChildScrollView], which is a scrollable widget that has a single
///    child.
///  * [ScrollNotification] and [NotificationListener], which can be used to watch
///    the scroll position without using a [ScrollController]. ëπÇ& ë‰ëÓ"/// Creates a widget that scrolls.ëı	ë¸  í'í
  í1í7  íFíL  íXíg  í{íÅ  íô!íü  í¿í∆  í›0í„  ìì  ì+ì1  ìD!ìJ  ìk-ìq  íí&í'íµíˆìììXì\ì]ìÇìëìíì°ìßì›ì√ìªì®ìæìŸì∆ì‹ì„ÇxñNÇ>/// {@template flutter.widgets.Scrollable.axisDirection}
/// The direction in which this widget scrolls.
///
/// For example, if the [Scrollable.axisDirection] is [AxisDirection.down],
/// increasing the scroll position will cause content below the bottom of the
/// viewport to become visible through the viewport. Similarly, if the
/// axisDirection is [AxisDirection.right], increasing the scroll position
/// will cause content beyond the right edge of the viewport to become visible
/// through the viewport.
///
/// Defaults to [AxisDirection.down].
/// {@endtemplate} ñ`É·ö7Éñ/// {@template flutter.widgets.Scrollable.controller}
/// An object that can be used to control the position to which this widget is
/// scrolled.
///
/// A [ScrollController] serves several purposes. It can be used to control
/// the initial scroll position (see [ScrollController.initialScrollOffset]).
/// It can be used to control whether the scroll view should automatically
/// save and restore its scroll position in the [PageStorage] (see
/// [ScrollController.keepScrollOffset]). It can be used to read the current
/// scroll position (see [ScrollController.offset]), or change it (see
/// [ScrollController.animateTo]).
///
/// If null, a [ScrollController] will be created internally by [Scrollable]
/// in order to create and manage the [ScrollPosition].
///
/// See also:
///
///  * [Scrollable.ensureVisible], which animates the scroll position to
///    reveal a given [BuildContext].
/// {@endtemplate} öFÖbü°Ö/// {@template flutter.widgets.Scrollable.physics}
/// How the widgets should respond to user input.
///
/// For example, determines how the widget continues to animate after the
/// user stops dragging the scroll view.
///
/// Defaults to matching platform conventions via the physics provided from
/// the ambient [ScrollConfiguration].
///
/// If an explicit [ScrollBehavior] is provided to
/// [Scrollable.scrollBehavior], the [ScrollPhysics] provided by that behavior
/// will take precedence after [Scrollable.physics].
///
/// The physics can be changed dynamically, but new physics will only take
/// effect if the _class_ of the provided object changes. Merely constructing
/// a new instance with a different configuration is insufficient to cause the
/// physics to be reapplied. (This is because the final object used is
/// generated dynamically, which can be relatively expensive, and it would be
/// inefficient to speculatively create this object each frame to see if the
/// physics should be updated.)
///
/// See also:
///
///  * [AlwaysScrollableScrollPhysics], which can be used to indicate that the
///    scrollable should react to scroll requests (and possible overscroll)
///    even if the scrollable's contents fit without scrolling being necessary.
/// {@endtemplate} ü≠Ç°üÅ«/// Builds the viewport through which the scrollable content is displayed.
///
/// A typical viewport uses the given [ViewportOffset] to determine which part
/// of its content is actually visible through the viewport.
///
/// See also:
///
///  * [Viewport], which is a viewport that displays a list of slivers.
///  * [ShrinkWrappingViewport], which is a viewport that displays a list of
///    slivers and sizes itself based on the size of the slivers. °≥Çÿ§xÇâ/// {@template flutter.widgets.Scrollable.incrementCalculator}
/// An optional function that will be called to calculate the distance to
/// scroll when the scrollable is asked to scroll via the keyboard using a
/// [ScrollAction].
///
/// If not supplied, the [Scrollable] will scroll a default amount when a
/// keyboard navigation key is pressed (e.g. pageUp/pageDown, control-upArrow,
/// etc.), or otherwise invoked by a [ScrollAction].
///
/// If [incrementCalculator] is null, the default for
/// [ScrollIncrementType.page] is 80% of the size of the scroll window, and
/// for [ScrollIncrementType.line], 50 logical pixels.
/// {@endtemplate} §êÇM¶…Ç/// {@template flutter.widgets.scrollable.excludeFromSemantics}
/// Whether the scroll actions introduced by this [Scrollable] are exposed
/// in the semantics tree.
///
/// Text fields with an overflow are usually scrollable to make sure that the
/// user can get to the beginning/end of the entered text. However, these
/// scrolling actions are generally not exposed to the semantics layer.
/// {@endtemplate}
///
/// See also:
///
///  * [GestureDetector.excludeFromSemantics], which is used to accomplish the
///    exclusion. ¶‚Å∞®ÉÅv/// {@template flutter.widgets.scrollable.hitTestBehavior}
/// Defines the behavior of gesture detector used in this [Scrollable].
///
/// This defaults to [HitTestBehavior.opaque] which means it prevents targets
/// behind this [Scrollable] from receiving events.
/// {@endtemplate}
///
/// See also:
///
///  * [HitTestBehavior], for an explanation on different behaviors. ®óÇ¯´}Çº/// The number of children that will contribute semantic information.
///
/// The value will be null if the number of children is unknown or unbounded.
///
/// Some subtypes of [ScrollView] can infer this value automatically. For
/// example [ListView] will use the number of widgets in the child list,
/// while the [ListView.separated] constructor will use half that amount.
///
/// For [CustomScrollView] and other types which do not receive a builder
/// or list of widgets, the child count must be explicitly provided.
///
/// See also:
///
///  * [CustomScrollView], for an explanation of scroll semantics.
///  * [SemanticsConfiguration.scrollChildCount], the corresponding semantics property. ´ÎÉoØIÉ/// {@template flutter.widgets.scrollable.dragStartBehavior}
/// Determines the way that drag start behavior is handled.
///
/// If set to [DragStartBehavior.start], scrolling drag behavior will
/// begin at the position where the drag gesture won the arena. If set to
/// [DragStartBehavior.down] it will begin at the position where a down
/// event is first detected.
///
/// In general, setting this to [DragStartBehavior.start] will make drag
/// animation smoother and setting it to [DragStartBehavior.down] will make
/// drag behavior feel slightly more reactive.
///
/// By default, the drag start behavior is [DragStartBehavior.start].
///
/// See also:
///
///  * [DragGestureRecognizer.dragStartBehavior], which gives an example for
///    the different behaviors.
///
/// {@endtemplate} Ø_Çc±µÇ+/// {@template flutter.widgets.scrollable.restorationId}
/// Restoration ID to save and restore the scroll offset of the scrollable.
///
/// If a restoration id is provided, the scrollable will persist its current
/// scroll offset and restore it during state restoration.
///
/// The scroll offset is persisted in a [RestorationBucket] claimed from
/// the surrounding [RestorationScope] using the provided restoration ID.
///
/// See also:
///
///  * [RestorationManager], which explains how state restoration works in
///    Flutter.
/// {@endtemplate} ±«ÅI≥Å/// {@macro flutter.widgets.shadow.scrollBehavior}
///
/// [ScrollBehavior]s also provide [ScrollPhysics]. If an explicit
/// [ScrollPhysics] is provided in [physics], it will take precedence,
/// followed by [scrollBehavior], and then the inherited ancestor
/// [ScrollBehavior]. ≥Åm¥vÅG/// {@macro flutter.material.Material.clipBehavior}
///
/// Defaults to [Clip.hardEdge].
///
/// This is passed to decorators in [ScrollableDetails], and does not directly affect
/// clipping of the [Scrollable]. This reflects the same [Clip] that is provided
/// to [ScrollView.clipBehavior] and is supplied to the [Viewport]. ¥áÄó¥Û\/// The axis along which the scroll view scrolls.
///
/// Determined by the [axisDirection].   µ"?µ>   µ"µ#µeÅ^µv  µä&µß  µeµf∂«áÖªFÑ0/// The state from the closest instance of this class that encloses the given
/// context, or null if none is found.
///
/// Typical usage is as follows:
///
/// ```dart
/// ScrollableState? scrollable = Scrollable.maybeOf(context);
/// ```
///
/// Calling this method will create a dependency on the [ScrollableState]
/// that is returned, if there is one. This is typically the closest
/// [Scrollable], but may be a more distant ancestor if [axis] is used to
/// target a specific [Scrollable].
///
/// Using the optional [Axis] is useful when Scrollables are nested and the
/// target [Scrollable] is not the closest instance. When [axis] is provided,
/// the nearest enclosing [ScrollableState] in that [Axis] is returned, or
/// null if there is none.
///
/// This finds the nearest _ancestor_ [Scrollable] of the `context`. This
/// means that if the `context` is that of a [Scrollable], it will _not_ find
/// _that_ [Scrollable].
///
/// See also:
///
/// * [Scrollable.of], which is similar to this method, but asserts
///   if no [Scrollable] ancestor is found. ªNª\  ªf
ªm   æPâ¿ C$ÑÇ/// The state from the closest instance of this class that encloses the given
/// context.
///
/// Typical usage is as follows:
///
/// ```dart
/// ScrollableState scrollable = Scrollable.of(context);
/// ```
///
/// Calling this method will create a dependency on the [ScrollableState]
/// that is returned, if there is one. This is typically the closest
/// [Scrollable], but may be a more distant ancestor if [axis] is used to
/// target a specific [Scrollable].
///
/// Using the optional [Axis] is useful when Scrollables are nested and the
/// target [Scrollable] is not the closest instance. When [axis] is provided,
/// the nearest enclosing [ScrollableState] in that [Axis] is returned.
///
/// This finds the nearest _ancestor_ [Scrollable] of the `context`. This
/// means that if the `context` is that of a [Scrollable], it will _not_ find
/// _that_ [Scrollable].
///
/// If no [Scrollable] ancestor is found, then this method will assert in
/// debug mode, and throw an exception in release mode.
///
/// See also:
///
/// * [Scrollable.maybeOf], which is similar to this method, but returns null
///   if no [Scrollable] ancestor is found. ¿ C'¿ C5  ¿ C?
¿ CF   ¿ GpÖÏ¿ KfÉ≈/// Provides a heuristic to determine if expensive frame-bound tasks should be
/// deferred for the [context] at a specific point in time.
///
/// Calling this method does _not_ create a dependency on any other widget.
/// This also means that the value returned is only good for the point in time
/// when it is called, and callers will not get updated if the value changes.
///
/// The heuristic used is determined by the [physics] of this [Scrollable]
/// via [ScrollPhysics.recommendDeferredLoading]. That method is called with
/// the current [ScrollPosition.activity]'s [ScrollActivity.velocity].
///
/// The optional [Axis] allows targeting of a specific [Scrollable] of that
/// axis, useful when Scrollables are nested. When [axis] is provided,
/// [ScrollPosition.recommendDeferredLoading] is called for the nearest
/// [Scrollable] in that [Axis].
///
/// If there is no [Scrollable] in the widget tree above the [context], this
/// method returns false. ¿ Kâ¿ Kó  ¿ K°
¿ K®   ¿ M`á{¿ NñÅ/// Scrolls the scrollables that enclose the given context so as to make the
/// given context visible.
///
/// If the [Scrollable] of the provided [BuildContext] is a
/// [TwoDimensionalScrollable], both vertical and horizontal axes will ensure
/// the target is made visible. ¿ N©¿ N∑  ¿ N≈¿ NÕ  ¿ N·!¿ NÎ  ¿ O¿ O  ¿ O'V¿ OF  
¿ Nÿ¿ Nı¿ N˝¿ N˛¿ O¿ O¿ O¿ OW¿ Ot¿ Ou ¿ UqÅU¿ Uw  ¿ U§r ¿ U™¿ U∫ ¿ U¡¿ U–  ¿ Uﬂ¿ UÓ  ¿ U˚¿ V   ¿ V ¿ V0  ¿ V>¿ VS   ¿ V`d¿ Vq  ¿ VÑ¿ Vñ  ¿ V`¿ Va ¿ V»¿ N,¿ XìÅƒ/// State object for a [Scrollable] widget.
///
/// To manipulate a [Scrollable] widget's scroll position, use the object
/// obtained from the [position] property.
///
/// To be informed of when a [Scrollable] widget is scrolling, use a
/// [NotificationListener] to listen for [ScrollNotification] notifications.
///
/// This class is not intended to be subclassed. To specialize the behavior of a
/// [Scrollable], provide it with a [ScrollPhysics].  ¿ Z}¿ Zç  ¿ [
¿ [  ¿ ^û¿ ^™  ¿ _òP¿ _∂ ¿ _œ¿ _Ê¿ _Á¿ _Ì"¿ `  ¿ `+¿ `%  ¿ `B1¿ `Y  ¿ q»1¿ qÿ ¿ qÓ¿ q˜¿ q¯¿ s
c¿ s3 ¿ sI¿ sR¿ sj¿ sS¿ sk¿ sl¿ sq/¿ sÅ ¿ sï¿ sû¿ sü¿ s˙b¿ t ¿ t4¿ tZ¿ t[¿ t:¿ tY¿ t;¿ tA¿ t`!¿ te ¿ t|¿ tÜ¿ tå  ¿ tú¿ t¢  ¿ É¿ É  ¿ É ¿ É6  
¿ YÅ]¿ ZcÅ(/// The manager for this [Scrollable] widget's viewport position.
///
/// To control what kind of [ScrollPosition] is created for a [Scrollable],
/// provide it with custom [ScrollController] that creates the appropriate
/// [ScrollPosition] in its [ScrollController.createScrollPosition] method.   ¿ Zõl¿ ZÎ:/// The resolved [ScrollPhysics] of the [ScrollableState].   ¿ [&ÇT¿ \PÅ/// An [Offset] that represents the absolute distance from the origin, or 0,
/// of the [ScrollPosition] expressed in the associated [Axis].
///
/// Used by [EdgeDraggingAutoScroller] to progress the position forward when a
/// drag gesture reaches the edge of the [Viewport].   ¿ ]~c¿ ]ì    ¿ ]ÂD¿ ^   ¿ ]Â¿ ]Ê¿ ^--¿ ^L   ¿ ^-¿ ^.¿ ^^=¿ ^u   ¿ ^^¿ ^_¿ ^¿X¿ ^ﬁ   ¿ ^¿¿ ^¡¿ _7¿ _9   ¿ _¿ _¿ _W>¿ _o   ¿ _W¿ _X¿ `¿É¿¿ `≈    ¿ dÑÅF¿ dï  ¿ d¢¿ d∂  ¿ d¿¿ d∆  ¿ dÑ¿ dÖ¿ eŒÅb¿ eﬂ  ¿ eÍ¿ eÚ  ¿ eŒ¿ eœ¿ g4Äö¿ gE   ¿ g4¿ g5¿ g“Å¿ g„   ¿ g“¿ g”¿ hıÉS¿ h˙  ¿ i¿ i   ¿ lLÑ.¿ l]  ¿ lm¿ ly  ¿ lL¿ lM¿ p~Å6¿ pè   ¿ p~¿ p¿ q˛ÄŸ¿ r  ¿ r0¿ rF  ¿ q˛¿ qˇ¿ r
¿ r¿ tπå∑¿ t◊  ¿ t‚
¿ tË  ¿ tπ¿ t∫¿ t≈¿ t∆¿ ÅtÅÑ¿ Åí  ¿ Å£
¿ Å©  ¿ Åt¿ Åu¿ ÅÄ¿ ÅÅ¿ É@Äí¿ ÉE  ¿ ÉU¿ Éf   ¿ É÷Å|¿ É€  ¿ ÉÏ¿ É˛   ¿ ÖVÄŒ¿ Ö[  ¿ Öm¿ ÖÄ   ¿ Ü(Ä‡¿ Ü-  ¿ Ü<¿ ÜL   ¿ áÇ¿ á    ¿ â-+¿ â2    ¿ â\+¿ âa    ¿ ä(ÄΩ¿ ä/  ¿ äS¿ ä[   ¿ ãèÉ≈¿ ãñ  ¿ ãØ¿ ã√   ¿ èXÑÇ¿ è]  ¿ èt¿ èà   ¿ ìﬁÅj¿ ì„  ¿ ì¯¿ î   ¿ ïLÅw¿ ïQ  ¿ ïr&¿ ïç   ¿ ñ«Åù¿ ñŒ  ¿ ñ€¿ ñÈ  ¿ ñÒ¿ ñ˘   ¿ òzà¿ òç  ¿ òì¿ ò°  ¿ òz¿ ò{¿ °`Çj¿ °v  ¿ °ë¿ °ü  ¿ °¨¿ °¥  ¿ °»!¿ °“  ¿ °Ô¿ °ˆ  ¿ ¢V¿ ¢-  ¿ ¢j ¿ ¢y  
¿ °ø¿ °‹¿ °‰¿ °Â¿ °˝¿ ¢¿ ¢¿ ¢>¿ ¢[¿ ¢\¿ £ŒÅ$¿ £ﬂ  ¿ £Û&¿ §  ¿ £Œ¿ £œ ¿ §ˆÇk¿ •≤Äµ/// A widget to handle selection for a scrollable.
///
/// This widget registers itself to the [registrar] and uses
/// [SelectionContainer] to collect selectables from its subtree. ¿ •ÈÄî ¿ •Ô¿ ¶
 ¿ ¶¿ ¶   ¿ ¶*¿ ¶9  ¿ ¶F¿ ¶U  ¿ ¶c¿ ¶r   ¿ ¶Å¿ ¶ó  ¿ ¶†¿ ¶µ  ¿ ¶¡¿ ¶Œ  ¿ ¶◊"¿ ¶   ¿ ¶˛a¿ ß+   ¿ ¶˛¿ ¶ˇ ¿ ßcÉT¿ ßi   ¿ ßπ=¿ ß‰   ¿ ß˚Äº¿ ®   ¿ ß˚¿ ß¸¿ ®ªÄﬂ¿ ®Ã  ¿ ®‹%¿ ®˘  ¿ ®ª¿ ®º¿ ©ûW¿ ©Ø   ¿ ©û¿ ©ü¿ ©˘Äº¿ ™  ¿ ™¿ ™   ¿ ©˘¿ ©˙ ¿ ™π¿ DÇ¿ ¨9Åy/// This updater handles the case where the selectables change frequently, and
/// it optimizes toward scrolling updates.
///
/// It keeps track of the drag start offset relative to scroll origin for every
/// selectable. The records are used to determine whether the selection is up to
/// date with the scroll position when it sends the drag update event to a
/// selectable. ¿ ¨ïÅ( ¿ ¨ï¿ ¨∫ ¿ ¨¡¿ ¨–  ¿ ¨⁄ ¿ ¨Û  ¿ ≠¿ ≠¿ ≠¿ ≠-¿ ≠¿ ≠/¿ ≠G¿ ≠Ñ¿ ≠H¿ ≠]¿ ≠O¿ ≠_¿ Æ/¿ Æ ¿ Æ/¿ Æl>¿ ÆÄ ¿ Æ®¿ ÆØ¿ Æ≈  ¿ ÆŒ,¿ ÆÌ  ¿ Æ˛#¿ Ø ¿ Ø¿ Ø%(¿ Ø-  ¿ ØQ&¿ ØY  ¿ ØÕ)¿ Ø“ ¿ ØÒ¿ ∞'¿ ∞6  ¿ ≥2Éπ¿ ∂±É@/// Stores the scroll offset when a scrollable receives the last
/// [SelectionEdgeUpdateEvent].
///
/// The stored scroll offset may be null if a scrollable never receives a
/// [SelectionEdgeUpdateEvent].
///
/// When a new [SelectionEdgeUpdateEvent] is dispatched to a selectable, this
/// updater checks the current scroll offset against the one stored in these
/// records. If the scroll offset is different, it synthesizes an opposite
/// [SelectionEdgeUpdateEvent] and dispatches the event before dispatching the
/// new event.
///
/// For example, if a selectable receives an end [SelectionEdgeUpdateEvent]
/// and its scroll offset in the records is different from the current value,
/// it synthesizes a start [SelectionEdgeUpdateEvent] and dispatches it before
/// dispatching the original end [SelectionEdgeUpdateEvent].¿ ∂È¿ ∂Í¿ ∂’¿ ∂Ë¿ ∂÷¿ ∂‚¿ ∂ÔV¿ ∑ ¿ ∑C¿ ∑D¿ ∑/¿ ∑B¿ ∑0¿ ∑<¿ Ø˚)¿ ∞    ¿ ∞CÄÿ¿ ∞G  ¿ ∞P¿ ∞`   ¿ ±©ÅÖ¿ ±Æ    ¿ ∑JÅr¿ ∑[   ¿ ∑J¿ ∑K¿ ∏¿Å]¿ ∏‹  ¿ ∏Ò¿ π  ¿ ∏¿¿ ∏¡¿ ∫!Üö¿ ∫=  ¿ ∫W¿ ∫q  ¿ ∫!¿ ∫"¿ ¿øÉ∆¿ ¿∆  ¿ ¿‰¿ ¿Ï   ¿ ƒâáÔ¿ ∆Å~/// Infers the [_currentDragStartRelatedToOrigin] and
/// [_currentDragEndRelatedToOrigin] from the geometry.
///
/// This method is called after a select word and select all event where the
/// selection is triggered by none drag events. The
/// [_currentDragStartRelatedToOrigin] and [_currentDragEndRelatedToOrigin]
/// are essential to handle future [SelectionEdgeUpdateEvent]s. ¿ ∆?¿ ∆E  ¿ ∆]¿ ∆c  ¿ ∆W¿ ∆s¿ Ã|ÅÅ¿ Ãò  ¿ Ã®¿ Ã¡  ¿ Ã|¿ Ã}¿ ŒÅ'¿ Œ  ¿ Œ.¿ ŒH  ¿ Œ¿ Œ¿ œ,Çl¿ œH  ¿ œh$¿ œà  ¿ œ,¿ œ-¿ —úÇu¿ —∏  ¿ —€'¿ —˛  ¿ —ú¿ —ù¿ ‘åk¿ ‘  ¿ ‘&¿ ‘,   ¿ ‡ÑÅ@¿ ‡â  ¿ ‡•¿ ‡≠   ¿ ·»Ä∫¿ ·Õ  ¿ ·‚¿ ·¸   ¿ ‚ÜÖ¿ ‚¢  ¿ ‚¿¿ ‚Ã  ¿ ‚◊¿ ‚Á  ¿ ‚Ü¿ ‚á¿ ÁóÜ≈¿ Á®  ¿ Áª¿ Á«  ¿ Áó¿ Áò¿ Ó`ÄŸ¿ Óq   ¿ Ó`¿ Óa ¿ ◊Üï¿ Û‚É/// With [_ScrollSemantics] certain child [SemanticsNode]s can be
/// excluded from the scrollable area for semantics purposes.
///
/// Nodes, that are to be excluded, have to be tagged with
/// [RenderViewport.excludeFromScrolling] and the [RenderAbstractViewport] in
/// use has to add the [RenderViewport.useTwoPaneSemantics] tag to its
/// [SemanticsConfiguration] by overriding
/// [RenderObject.describeSemanticsConfiguration].
///
/// If the tag [RenderViewport.useTwoPaneSemantics] is present on the viewport,
/// two semantics nodes will be used to represent the [Scrollable]: The outer
/// node will contain all children, that are excluded from scrolling. The inner
/// node, which is annotated with the scrolling actions, will house the
/// scrollable children. ¿ ÙÄÍ ¿ Ù#¿ Ù3 ¿ Ù:	¿ ÙA  ¿ ÙI¿ ÙX  ¿ Ùe$¿ Ùt  ¿ Ùè ¿ Ùû  ¿ Ùµ¿ Ùº  
¿ Ù…¿ Ùœ¿ ı¿ ÙÎ¿ Ù„¿ Ù–¿ ÙÊ¿ ı¿ ÙÓ¿ ı¿ ı¿ ı   ¿ ı,!¿ ı7  ¿ ıQ¿ ı\   ¿ ısÄ˘¿ ıñ  ¿ ı©¿ ı∑  ¿ ıs¿ ıt¿ ˆpÄ˙¿ ˆÅ  ¿ ˆî¿ ˆ¢  ¿ ˆ™#¿ ˆ¬  ¿ ˆp¿ ˆq ¿ ˜nåu¿ ˜t  ¿ ˜¶Åy ¿ ˜¶¿ ˜º ¿ ˜√ ¿ ˜‹  ¿ ˜È$¿ ˜¯  ¿ ¯ ¿ ¯"  ¿ ¯9¿ ¯E  ¿ ¯\¿ ¯R¿ ¯^¿ ¯á¿ ¯o¿ ¯â¿ ¯º¿ ¯®¿ ¯æ¿ ¯Ÿ¿ ¯ﬁ¿ ¯‰¿ ¯ﬂ¿ ˘î¿ ˘£  ¿ ˚$¿ ˚)  ¿ ¸/¿ ¸4  ¿ ˛‰¿ ˛Û  ¿ ˘#n¿ ˘{B/// Whether this render object is excluded from the semantic tree.   ¿ ˘∞Ä˛¿ ˘¥  ¿ ˘Ω¿ ˘Õ   ¿ ˙≤o¿ ˙Ô1/// Whether this node can be scrolled implicitly.   ¿ ˚DÄ±¿ ˚H  ¿ ˚_
¿ ˚e   ¿ ˚˘3¿ ¸    ¿ ¸KÄ§¿ ¸O  ¿ ¸b
¿ ¸h   ¿ ¸ÛÅÌ¿ ˝  ¿ ˝#¿ ˝;  ¿ ¸Û¿ ¸Ù¿ ˇÑÅ¿ ˇ  ¿ ˇ)¿ ˇ8  ¿ ˇ=¿ ˇU  ¿ ˇ\ ¿ ˇu  ¿ ˇ¿ ˇ¿áZ¿ò   ¿á¿à ¿EÅç¿K    ¿¢.¿∑   ¿¢¿£¿à1¿ú   ¿à¿â¿ΩN¿Œ  ¿›¿Ê  ¿Ω¿æ¿Q¿"  ¿1¿:  ¿¿¿d:¿x   ¿d¿e ¿
/öB¿€É•/// A widget that manages scrolling in both the vertical and horizontal
/// dimensions and informs the [TwoDimensionalViewport] through which the
/// content is viewed.
///
/// [TwoDimensionalScrollable] implements the interaction model for a scrollable
/// widget in both the vertical and horizontal axes, including gesture
/// recognition, but does not have an opinion about how the
/// [TwoDimensionalViewport], which actually displays the children, is
/// constructed.
///
/// It's rare to construct a [TwoDimensionalScrollable] directly. Instead,
/// consider subclassing [TwoDimensionalScrollView], which combines scrolling,
/// viewporting, and a layout model in both dimensions.
///
/// See also:
///
///  * [TwoDimensionalScrollView], an abstract base class for displaying a
///    scrolling array of children in both directions.
///  * [TwoDimensionalViewport], which can be used to customize the child layout
///    model. ¿Ç> ¿≤¿ Äî/// Creates a widget that scrolls in two dimensions.
///
/// The [horizontalDetails], [verticalDetails], and [viewportBuilder] must not
/// be null.
¿—	¿ÿ  ¿‡¿Ô  ¿¿  ¿(¿7  ¿K¿Q  ¿i¿o  ¿Å!¿á  ¿®5¿Æ  ¿„0¿È  ¿-¿  
¿ù¿ƒ¿ÿ¿Ÿ¿¸¿¿¿0¿?¿@	¿QÄê¿Õ\/// How scrolling gestures should lock to one axis, or allow free movement
/// in both axes. ¿ÊÄ˚¿–Ä…/// The configuration of the horizontal [Scrollable].
///
/// These [ScrollableDetails] can be used to set the [AxisDirection],
/// [ScrollController], [ScrollPhysics] and more for the horizontal axis. ¿ÊÄı¿ÃÄ≈/// The configuration of the vertical [Scrollable].
///
/// These [ScrollableDetails] can be used to set the [AxisDirection],
/// [ScrollController], [ScrollPhysics] and more for the vertical axis. ¿‡ÅØ¿ÄÅi/// Builds the viewport through which the scrollable content is displayed.
///
/// A [TwoDimensionalViewport] uses two given [ViewportOffset]s to determine
/// which part of its content is actually visible through the viewport.
///
/// See also:
///
///  * [TwoDimensionalViewport], which is a viewport that displays a span of
///    widgets in both dimensions. ¿îÄü¿ d/// {@macro flutter.widgets.Scrollable.incrementCalculator}
///
/// This value applies in both axes. ¿8Å*¿UÅ/// {@macro flutter.widgets.scrollable.restorationId}
///
/// Internally, the [TwoDimensionalScrollable] will introduce a
/// [RestorationScope] that will be assigned this value. The two [Scrollable]s
/// within will then be given unique IDs within this scope. ¿gÄã¿ﬁe/// {@macro flutter.widgets.scrollable.excludeFromSemantics}
///
/// This value applies to both axes. ¿˜Äå¿t`/// {@macro flutter.widgets.scrollable.hitTestBehavior}
///
/// This value applies to both axes. ¿àÄí¿	b/// {@macro flutter.widgets.scrollable.dragStartBehavior}
///
/// This value applies in both axes.  ¿]¿K   ¿¿ ¿ÄÑT¿É2/// The state from the closest instance of this class that encloses the given
/// context, or null if none is found.
///
/// Typical usage is as follows:
///
/// ```dart
/// TwoDimensionalScrollableState? scrollable = TwoDimensionalScrollable.maybeOf(context);
/// ```
///
/// Calling this method will create a dependency on the closest
/// [TwoDimensionalScrollable] in the [context]. The internal [Scrollable]s
/// can be accessed through [TwoDimensionalScrollableState.verticalScrollable]
/// and [TwoDimensionalScrollableState.horizontalScrollable].
///
/// Alternatively, [Scrollable.maybeOf] can be used by providing the desired
/// [Axis] to the `axis` parameter.
///
/// See also:
///
/// * [TwoDimensionalScrollable.of], which is similar to this method, but
///   asserts if no [Scrollable] ancestor is found. ¿¿   ¿ÿáó¿ ÁÉπ/// The state from the closest instance of this class that encloses the given
/// context.
///
/// Typical usage is as follows:
///
/// ```dart
/// TwoDimensionalScrollableState scrollable = TwoDimensionalScrollable.of(context);
/// ```
///
/// Calling this method will create a dependency on the closest
/// [TwoDimensionalScrollable] in the [context]. The internal [Scrollable]s
/// can be accessed through [TwoDimensionalScrollableState.verticalScrollable]
/// and [TwoDimensionalScrollableState.horizontalScrollable].
///
/// If no [TwoDimensionalScrollable] ancestor is found, then this method will
/// assert in debug mode, and throw an exception in release mode.
///
/// Alternatively, [Scrollable.of] can be used by providing the desired [Axis]
/// to the `axis` parameter.
///
/// See also:
///
/// * [TwoDimensionalScrollable.maybeOf], which is similar to this method,
///   but returns null if no [TwoDimensionalScrollable] ancestor is found. ¿ Í¿ ¯    ¿$söC¿&∫Ç@/// State object for a [TwoDimensionalScrollable] widget.
///
/// To manipulate one of the internal [Scrollable] widget's scroll position, use
/// the object obtained from the [verticalScrollable] or [horizontalScrollable]
/// property.
///
/// To be informed of when a [TwoDimensionalScrollable] widget is scrolling,
/// use a [NotificationListener] to listen for [ScrollNotification]s.
/// Both axes will have the same viewport depth since there is only one
/// viewport, and so should be differentiated by the [Axis] of the
/// [ScrollMetrics] provided by the notification.  ¿'-¿'  ¿'5/¿'G  ¿'h[¿'â ¿'ß¿'∞¿'¿¿'±¿'¡¿'¬¿'«]¿'Ë ¿(¿(¿(!¿(¿("¿(#¿()ÅÜ¿)#ÄŸ/// The [ScrollableState] of the vertical axis.
///
/// Accessible by calling [TwoDimensionalScrollable.of].
///
/// Alternatively, [Scrollable.of] can be used by providing [Axis.vertical]
/// to the `axis` parameter.   ¿)≥Åê¿*±Ä›/// The [ScrollableState] of the horizontal axis.
///
/// Accessible by calling [TwoDimensionalScrollable.of].
///
/// Alternatively, [Scrollable.of] can be used by providing [Axis.horizontal]
/// to the `axis` parameter.   ¿+GÅ#¿+X   ¿+G¿+H¿,nÜƒ¿,  ¿,è"¿,©  ¿,n¿,o¿36äÎ¿3I  ¿3O¿3]  ¿36¿37¿>%Äè¿>6   ¿>%¿>& ¿?àÅK¿?é  ¿?…r ¿?œ¿?Ì ¿?Ù&¿@  ¿@ ¿@0   ¿@?<¿@c   ¿@ÄQ¿@ë  ¿@§"¿@ƒ  ¿@Ä¿@Å ¿AÇÙ¿A  ¿A7Å˙ ¿A=¿AT ¿A[	¿Ab  ¿Aj¿Ay  ¿Aã¿Aõ  ¿AØ¿Aø  ¿A—¿Aÿ  ¿AÁ¿AÓ  ¿A˙¿B  ¿B¿B  ¿B1¿B8  ¿BQ¿BX  ¿Bn¿Bu  ¿Bá¿Bé  ¿B¢5¿B®  ¿Bæ¿B“¿B”¿B‡¿BÊ¿C/¿C	¿Bı¿BÁ¿B¯¿C¿C¿C¿C¿C¿C*¿C+¿C5/¿CP  ¿Ch.¿Câ   ¿CõY¿Cƒ   ¿Cõ¿Cú ¿C¯£Œ¿C˛   ¿E¿E  ¿E(¿E0  ¿D7j¿DP    ¿D§l¿D∏    	¿E~ÇO¿E†  ¿Eª¿E…  ¿E÷¿Eﬁ  ¿EÚ!¿E¸  ¿F¿F   ¿F8V¿FW  ¿Fî ¿F£  ¿E~¿E¿EÈ¿F¿F¿F¿F'¿F-¿F.¿Fh¿FÖ¿FÜ¿G—Å©¿G÷  ¿GÍ¿GÚ   ¿I~ÅÁ¿Iè  ¿Iü¿I∞  ¿I~¿I¿KiÑv¿Kz  ¿Kã¿Kù  ¿Ki¿Kj¿O„áÈ¿OÙ  ¿P¿P  ¿O„¿O‰¿W–É}¿W·  ¿W¿X   ¿W–¿W—¿[QÅï¿[b   ¿[Q¿[R¿\Íâ¿\˚  ¿]
¿]  ¿\Í¿\Î¿fÅ¿¿f  ¿f$¿f2  ¿f:¿fB  ¿f¿f ¿g˜É¿g˝  ¿h.Ç ¿h4¿hM ¿hT	¿h[  ¿hc¿hr  ¿há¿hó  ¿h´¿hª  ¿hÕ¿h‘  ¿h„¿hÍ  ¿hˆ¿h˝  ¿i¿i  ¿i-¿i4  ¿iM¿iT  ¿ij¿iq  ¿iÉ¿iä  ¿iû5¿i§  ¿i∫¿iŒ¿iœ¿i‹¿i‚¿j.¿j¿iÒ¿i„¿iÙ¿j¿j¿j¿j
¿j¿j(¿j)¿j41¿jU  ¿ji/¿jÑ   ¿jù]¿j»   ¿jù¿jû ¿j˛ç∆¿k   ¿k?'¿kT  ¿kkj¿kä    ¿kÿl¿kÒ    ¿lHÄ÷¿lY   ¿lH¿lI¿n
É&¿n,  ¿nG¿nU  ¿nb¿nj  ¿n~!¿nà  ¿n•¿n¨  ¿nƒV¿n„  ¿o  ¿o/  ¿n
¿n¿nu¿ní¿nö¿nõ¿n≥¿nπ¿n∫¿nÙ¿o¿o¿q4Ö ¿qE  ¿qP
¿qV  ¿q4¿q5¿wÅ¿¿w  ¿w"¿w0  ¿w8¿w@  ¿w¿w  ¿ÂÑH¿û`/// Specifies how to configure the [DragGestureRecognizer]s of a
/// [TwoDimensionalScrollable].  ¿∑Äπ¿lÄ¨/// This behavior will not allow for any diagonal scrolling.
///
/// Drag gestures in one direction or the other will lock the input axis until
/// the gesture is released. ¿uÅ¿~Ä˛/// This behavior will only allow diagonal scrolling on a weighted
/// scale per gesture event.
///
/// This means that after initially evaluating the drag gesture, the weighted
/// evaluation (based on [kTouchSlop]) stands until the gesture is released. ¿êÅ9¿	∑Å/// This behavior will only allow diagonal scrolling on a weighted
/// scale that is evaluated throughout a gesture event.
///
/// This means that during each update to the drag gesture, the scrolling
/// axis will be allowed to scroll diagonally if it exceeds the
/// [kTouchSlop]. ¿	Œ\¿
&S/// This behavior allows free movement in any and all directions when
/// dragging.       ¿ Ô=Åò¿ ÔD  ¿ Ô\¿ Ôm    ÑRÄ…Ñ o/// Signature used by [Scrollable] to build the viewport through which the
/// scrollable content is displayed.  ÑÏÑ˙  ÖÖ   ÖÅÖ£}/// Signature used by [TwoDimensionalScrollable] to build the viewport through
/// which the scrollable content is displayed.  Ö”Ö·  ÖÈÖ˘  Ü
!Ü   áFá!         âê <ÄÜÄ§Ä•Ä∫Ä÷Ä◊ÅÅ)ÅRÅ{Å£Å§ÅπÅ“ÅÚÇÇ2ÇMÇsÇíÇ∂Ç‘ÇıÉÉ2ÉTÉuÉòÉ∑ÉÀÉ„É‰ÑÑÑ3ÑQÑRÑùÑ¬ÖÖÖlÖõÜ.Ü/Ü\Ü_Ü•ÜÚáá`áaá±á⁄áﬁà)àwàªàøââ`â´â√â«ääbätäxäπäΩã
ãYãúãÊãÍå3åtåƒçççFçJçòçÈé5éÄéŒé“é‡é‰è-è]è≠è êê2êÄêûêÌê˚ëNëçë∑ë‹ëÒí í-íBíTíwíïíºíŸìì'ì@ìgìöì‡ì·îîNîTî¢îÚï;ïàïŸïıï˚ñ#ñ8ñ]ñ^ñññÁñ˜ñ˝óKóõóËò-ò|ò≈òÍòô?ôyôôèôïô‡öööCöDöyö≠ö≥öˇõ*õ0õ~õßõ≠õ‚ú3újúpúΩùù^ùßù˜ûFûhûnû~ûÑû’ü#üuüäü™ü´ü¯ü˛†O†é†î†§†™†Ù°C°á°∞°±°Ú¢>¢ã¢°¢ß¢Û£D£{£Å£π§§@§U§ç§é§–••:•@•ê•‹¶&¶;¶A¶Q¶W¶®¶º¶ﬂ¶‡ßßgßmßΩßÛ®®®®$®k®î®ï®›®„©3©9©Ö©–™™"™n™µ™ª™À™—´´p´ë´í´È¨(¨f¨l¨¥≠ ≠J≠i≠o≠∫ÆÆ9Æ?ÆáÆçÆùÆ£ÆÚØØØ/Ø\Ø]ØòØÊØÏ∞;∞x∞~∞…±±±+±1±~±ê±•±ƒ±≈±˙≤ ≤E≤é≤“≤Í≥≥≥I≥O≥r≥x≥–¥#¥i¥Ñ¥Ö¥π¥ø¥Ëµµ µ,µbµcµoµ¥µﬂ∂0∂|∂¿∂ƒ∂≈∑∑>∑D∑g∑m∑{∑º∑∆∑Ã∏∏_∏´∏—∏◊π%πuπ¬πﬂπÂ∫1∫Å∫ú∫¢∫≤∫∏∫˛ª,ªvªΩªÔºTºrºÃΩΩ[ΩñΩ±ΩπΩ›æ2æ8æIæMæNæûæ≠æ≥æ÷æ‹æÍø%ø/ø5øÅø»¿ @¿ @:¿ @@¿ @é¿ @ﬁ¿ A(¿ A.¿ Az¿ A ¿ AÂ¿ AÎ¿ B7¿ Bq¿ Bw¿ Bá¿ Bç¿ B›¿ C¿ CO¿ Cö¿ C™¿ Cœ¿ D¿ D¿ Dp¿ Dí¿ Dü¿ Dª¿ D˜¿ E<¿ Eé¿ E„¿ F¿ F@¿ FZ¿ Fg¿ Fé¿ F‚¿ G¿ G¿ G'¿ G/¿ GB¿ GL¿ Gi¿ Gm¿ Gn¿ Gø¿ G˝¿ H¿ HQ¿ H¢¿ HÚ¿ H¯¿ IE¿ Iî¿ I›¿ I„¿ J1¿ Jz¿ Jƒ¿ JÁ¿ JÌ¿ K<¿ KX¿ K±¿ L¿ L(¿ LÇ¿ Lƒ¿ LÃ¿ L˜¿ MA¿ MG¿ MY¿ M]¿ M^¿ M≠¿ M ¿ M–¿ N¿ N^¿ NÄ¿ N•¿ N¡¿ N›¿ O¿ O#¿ O¿ OÜ¿ Oø¿ O¿¿ P¿ P^¿ P≠¿ PÚ¿ Q!¿ Q(¿ Qh¿ Qé¿ QÕ¿ QÓ¿ R¿ R\¿ RÅ¿ Rü¿ Rª¿ R—¿ R˚¿ S+¿ S4¿ SV¿ SW¿ Sê¿ S¥¿ S‰¿ SÍ¿ SÎ¿ T#¿ TF¿ TL¿ Tk¿ Tà¿ Té¿ Tÿ¿ T‹¿ Tﬁ¿ Tﬂ¿ U0¿ Uq¿ U¢¿ UΩ¿ U€¿ U˜¿ V¿ V¿ V¿ V<¿ V]¿ V^¿ Vj¿ Vú¿ V¡¿ V≈¿ V«¿ V»¿ VÙ¿ V¯¿ WB¿ Wm¿ Wq¿ W∂¿ X¿ X¿ XX¿ Xç¿ XÌ¿ Y¿ Y¿ Y¿ Y¿ Y_¿ Ye¿ Y≥¿ Z ¿ ZN¿ Z{¿ Zò¿ Zô¿ Z÷¿ [¿ [#¿ [$¿ [s¿ [µ¿ [ª¿ \¿ \C¿ \f¿ \ä¿ \ƒ¿ \˝¿ ]7¿ ]p¿ ]w¿ ]{¿ ]|¿ ]‚¿ ]„¿ ]Ô¿ ^*¿ ^+¿ ^7¿ ^[¿ ^\¿ ^h¿ ^ú¿ ^Ω¿ ^æ¿ ^ ¿ _¿ _¿ _&¿ _T¿ _U¿ _a¿ _ñ¿ _Í¿ _Î¿ `¿ `@¿ `u¿ `v¿ `æ¿ `Ÿ¿ a(¿ aa¿ aÉ¿ a∑¿ aÁ¿ b<¿ bB¿ bu¿ bî¿ b ¿ c¿ cc¿ cô¿ c«¿ cÕ¿ cŒ¿ d-¿ dL¿ d}¿ dÅ¿ dÇ¿ dé¿ d◊¿ e¿ e4¿ ed¿ e¡¿ e«¿ eÀ¿ eÃ¿ eÿ¿ e˚¿ f2¿ f]¿ f®¿ f¿ g-¿ g1¿ g2¿ g>¿ gS¿ gx¿ gÆ¿ g¥¿ gÀ¿ gœ¿ g–¿ g‹¿ g˝¿ hJ¿ h¥¿ hÀ¿ hÓ¿ hÚ¿ hÛ¿ i(¿ iy¿ iå¿ ií¿ j!¿ j4¿ j:¿ jû¿ k¿ k¿ kQ¿ kf¿ kn¿ kï¿ kº¿ kÙ¿ kı¿ lE¿ lI¿ lJ¿ lV¿ lÖ¿ l´¿ l¨¿ l·¿ m¿ mX¿ m|¿ mØ¿ m⁄¿ n¿ n=¿ ng¿ nv¿ n™¿ n⁄¿ o¿ oN¿ om¿ oß¿ o±¿ oπ¿ oÚ¿ p%¿ p+¿ p,¿ pX¿ pq¿ pw¿ p{¿ p|¿ pà¿ põ¿ p¿¿ pÎ¿ p¯¿ q+¿ qW¿ q]¿ q^¿ qv¿ qú¿ q±¿ qµ¿ q∂¿ q≈¿ q∆¿ q˚¿ q¸¿ r¿ r¿ rP¿ rÑ¿ rŒ¿ r‘¿ rÿ¿ rŸ¿ s¿ s¿ so¿ s¢¿ s£¿ s¯¿ t^¿ tÉ¿ tÑ¿ tö¿ t∂¿ t∑¿ t√¿ t–¿ t¿ uB¿ uP¿ uV¿ uh¿ uÆ¿ u¸¿ vF¿ vÑ¿ vü¿ v¨¿ v…¿ vÂ¿ w'¿ wó¿ w¯¿ x1¿ xJ¿ xw¿ x¶¿ x◊¿ y¿ y3¿ yu¿ y∑¿ y˘¿ zU¿ zñ¿ zı¿ {6¿ {y¿ {ä¿ {ô¿ {¶¿ {ƒ¿ |¿ |z¿ |›¿ }¿ }1¿ }^¿ }ç¿ }æ¿ }È¿ ~¿ ~\¿ ~û¿ ~‡¿ <¿ }¿ ‹¿ Ä¿ Ä`¿ Äq¿ ÄÄ¿ Äç¿ Äï¿ Äõ¿ Äµ¿ Ä€¿ Å¿ Åg¿ Åm¿ Åq¿ År¿ Å~¿ Åã¿ Å±¿ Å⁄¿ ÅË¿ ÅÓ¿ Ç¿ ÇD¿ Çæ¿ ÇÔ¿ Çı¿ Ç˘¿ Ç˙¿ É¿ É¿ É¿ É=¿ É>¿ Ép¿ Éã¿ É¶¿ Éœ¿ É”¿ É‘¿ Ñ¿ ÑR¿ Ñ£¿ ÑÃ¿ ÑÁ¿ Ö¿ Ö4¿ ÖO¿ ÖS¿ ÖT¿ Öä¿ ÖŸ¿ Ü¿ Ü!¿ Ü%¿ Ü&¿ ÜV¿ Ü•¿ Ü—¿ ÜÍ¿ á¿ á	¿ á
¿ á'¿ á]¿ á´¿ áÙ¿ à¿ à¿ à¿ àK¿ àö¿ à∆¿ à€¿ à¿ â¿ â&¿ â*¿ â+¿ âC¿ âU¿ âY¿ âZ¿ âr¿ âÑ¿ âà¿ ââ¿ âõ¿ âú¿ âÏ¿ ä&¿ äc¿ äx¿ äª¿ ä€¿ ä‚¿ äÊ¿ äÁ¿ ã2¿ ã¿ ãç¿ ãÀ¿ å%¿ å|¿ åª¿ ç¿ çY¿ çß¿ çÙ¿ é¿ é0¿ é1¿ éw¿ é†¿ éœ¿ é˛¿ è¿ è¿ èQ¿ èU¿ èV¿ èê¿ èÃ¿ ê¿ êh¿ êè¿ ê¬¿ ê“¿ ê⁄¿ ë¿ ëj¿ ëø¿ í¿ í_¿ ío¿ íw¿ í«¿ íÏ¿ ì¿ ìX¿ ìy¿ ì—¿ ì◊¿ ì€¿ ì‹¿ î¿ î7¿ îá¿ îŸ¿ ï¿ ï?¿ ïE¿ ïI¿ ïJ¿ ïú¿ ïø¿ ñ/¿ ñ`¿ ñ†¿ ñ®¿ ñÆ¿ ñ¿¿ ñƒ¿ ñ≈¿ ó¿ ó:¿ óa¿ óè¿ ó¬¿ ó…¿ ó ¿ óÙ¿ ò¿ òK¿ òZ¿ òa¿ òe¿ òf¿ òw¿ òx¿ òÑ¿ ò´¿ ò ¿ ô(¿ ôo¿ ôv¿ ôû¿ ô…¿ ô–¿ ö.¿ ör¿ öò¿ ö∞¿ ö ¿ ö·¿ õ¿ õ5¿ õY¿ õÇ¿ õÆ¿ õÎ¿ ú¿ úE¿ úg¿ úç¿ úª¿ ú˚¿ ù
¿ ù¿ ù"¿ ù+¿ ù2¿ ù3¿ ù[¿ ùõ¿ ù’¿ ùˆ¿ û¿ û8¿ û|¿ ûµ¿ ûŒ¿ ûÿ¿ û·¿ ûÁ¿ ûË¿ ü¿ ü¿ üX¿ üß¿ üƒ¿ ü¿ †¿ †!¿ †?¿ †V¿ †_¿ †e¿ †f¿ †y¿ †}¿ †~¿ †Ã¿ °¿ °^¿ °ç¿ °®¿ °ƒ¿ °Î¿ ¢
¿ ¢f¿ ¢å¿ ¢ì¿ ¢ÿ¿ ¢Ê¿ £¿ £¿ £0¿ £X¿ £Ü¿ £ç¿ £«¿ £À¿ £Ã¿ £ÿ¿ §¿ §H¿ §ò¿ §Ô¿ §Û¿ §ı¿ §ˆ¿ •)¿ •-¿ •j¿ •¨¿ •Á¿ ¶¿ ¶&¿ ¶B¿ ¶_¿ ¶x¿ ¶~¿ ¶¿ ¶û¿ ¶ø¿ ¶’¿ ¶˚¿ ¶¸¿ ß¿ ß`¿ ßb¿ ßc¿ ß∑¿ ß¯¿ ß˘¿ ®¿ ®¿ ®1¿ ®q¿ ®å¿ ®≠¿ ®¥¿ ®∏¿ ®π¿ ®≈¿ ©¿ ©+¿ ©\¿ ©ë¿ ©ó¿ ©õ¿ ©ú¿ ©®¿ ©ª¿ ©›¿ ©Ú¿ ©ˆ¿ ©˜¿ ™¿ ™*¿ ™I¿ ™l¿ ™ê¿ ™´¿ ™≤¿ ™∂¿ ™∏¿ ™π¿ ´¿ ´3¿ ´7¿ ´á¿ ´ÿ¿ ¨#¿ ¨3¿ ¨ì¿ ¨Ω¿ ¨÷¿ ¨˚¿ ≠¿ ≠à¿ ≠∫¿ ≠æ¿ ≠ø¿ ≠ˇ¿ Æ2¿ Æ3¿ Æj¿ Æ¨¿ Æ≠¿ ÆÃ¿ Æ¸¿ Ø#¿ ØO¿ Øy¿ Øz¿ ØÀ¿ Ø¯¿ Ø˘¿ ∞%¿ ∞A¿ ∞h¿ ∞Ü¿ ∞î¿ ∞ö¿ ∞œ¿ ∞Ê¿ ±¿ ±¿ ±¿ ±g¿ ±ß¿ ±»¿ ±Í¿ ±¯¿ ±˛¿ ≤!¿ ≤k¿ ≤ê¿ ≤†¿ ≤®¿ ≤Œ¿ ≤Á¿ ≥+¿ ≥/¿ ≥0¿ ≥s¿ ≥ï¿ ≥õ¿ ≥Á¿ ¥	¿ ¥¿ ¥_¿ ¥Æ¿ ¥˚¿ µL¿ µ]¿ µc¿ µ±¿ ∂¿ ∂R¿ ∂ë¿ ∂Ì¿ ∑G¿ ∑H¿ ∑T¿ ∑t¿ ∑≥¿ ∏&¿ ∏ó¿ ∏π¿ ∏Ω¿ ∏æ¿ ∏ ¿ π¿ π=¿ πj¿ πó¿ π¬¿ πÏ¿ ∫¿ ∫¿ ∫¿ ∫+¿ ∫y¿ ∫◊¿ ª¿ ª\¿ ªb¿ ª£¿ ª›¿ º9¿ º©¿ Ω¿ Ω ¿ Ω~¿ ΩÚ¿ æ`¿ æf¿ æ±¿ æ≤¿ ø¿ øU¿ øg¿ øî¿ ø∫¿ øœ¿ ø’¿ ø˝¿ ¿J¿ ¿o¿ ¿ó¿ ¿ü¿ ¿•¿ ¿∏¿ ¿º¿ ¿Ω¿ ¿˝¿ ¡G¿ ¡ã¿ ¡¥¿ ¬¿ ¬R¿ ¬¢¿ ¬Ú¿ √,¿ √[¿ √c¿ √∏¿ √ÿ¿ √‡¿ √Ê¿ ƒ'¿ ƒÇ¿ ƒÜ¿ ƒá¿ ƒø¿ ƒ˘¿ ƒˇ¿ ≈N¿ ≈Ñ¿ ≈“¿ ∆¿ ∆|¿ ∆Ω¿ «¿ «?¿ «≠¿ »¿ »*¿ »l¿ »Œ¿ …¿ …&¿ …g¿ …p¿ …‡¿ …Ê¿  N¿  §¿  …¿ À¿ Àg¿ À•¿ ÀΩ¿ À˙¿ Ã¿ Ão¿ Ãu¿ Ãy¿ Ãz¿ ÃÜ¿ Ã…¿ ÃÙ¿ Õ5¿ Õâ¿ Õµ¿ Õ·¿ ÕÁ¿ Õ˙¿ Õ˛¿ Õˇ¿ Œ¿ ŒP¿ Œ¶¿ ŒË¿ œ¿ œ%¿ œ)¿ œ*¿ œ6¿ œê¿ œ·¿ –.¿ –}¿ –º¿ –‰¿ —
¿ —-¿ —4¿ —\¿ —|¿ —Ç¿ —ï¿ —ô¿ —ö¿ —¶¿ “¿ “Z¿ “ß¿ “ˆ¿ ”5¿ ”]¿ ”É¿ ”¶¿ ”≠¿ ”’¿ ”ı¿ ”˚¿ ‘¿ ‘¿ ‘¿ ‘7¿ ‘X¿ ‘v¿ ‘ñ¿ ‘™¿ ‘‰¿ ’¿ ’X¿ ’e¿ ’°¿ ’‘¿ ÷¿ ÷¿ ÷M¿ ÷[¿ ÷a¿ ÷µ¿ ÷˝¿ ◊m¿ ◊◊¿ ◊˙¿ ÿ¿ ÿ_¿ ÿ±¿ Ÿ¿ Ÿ¿ Ÿ!¿ ŸS¿ Ÿ§¿ Ÿ∂¿ Ÿ¿¿ ŸÏ¿ ⁄7¿ ⁄A¿ ⁄Q¿ ⁄q¿ ⁄≥¿ ⁄˛¿ €¿ €¿ €E¿ €è¿ €°¿ €´¿ €’¿ ‹¿ ‹(¿ ‹8¿ ‹W¿ ‹ü¿ ‹Ò¿ ›E¿ ›W¿ ›a¿ ›ì¿ ›‰¿ ›ˆ¿ ﬁ ¿ ﬁ,¿ ﬁw¿ ﬁÅ¿ ﬁë¿ ﬁ∞¿ ﬁÚ¿ ﬂ=¿ ﬂO¿ ﬂY¿ ﬂÑ¿ ﬂŒ¿ ﬂ‡¿ ﬂÍ¿ ‡¿ ‡]¿ ‡g¿ ‡w¿ ‡}¿ ‡Å¿ ‡Ç¿ ‡æ¿ ·¿ ·L¿ ·ò¿ ·¡¿ ·≈¿ ·∆¿ ‚¿ ‚¿ ‚É¿ ‚Ñ¿ ‚ê¿ ‚Ô¿ „	¿ „8¿ „á¿ „Ø¿ „‹¿ ‰)¿ ‰Q¿ ‰ä¿ ‰∆¿ ‰Ó¿ Â=¿ Âä¿ ÂØ¿ ÂÎ¿ Ê)¿ ÊR¿ Ê|¿ Ê´¿ Ê¯¿ ÁG¿ ÁM¿ Áê¿ Áî¿ Áï¿ Á°¿ Á‘¿ Ë¿ Ë_¿ Ëì¿ È¿ È:¿ È}¿ ÈÒ¿ ÍZ¿ Í≤¿ ÍË¿ Î5¿ Î;¿ Îé¿ Î¿¿ Ï*¿ Ïc¿ Ï¶¿ Ì¿ Ì{¿ Ì“¿ Ó¿ ÓS¿ ÓY¿ Ó]¿ Ó^¿ Ój¿ Ó}¿ Ó¨¿ ÓŸ¿ Ó˝¿ Ô!¿ Ô6¿ Ô:¿ Ô<¿ Ô=¿ Ô¿ Ô±¿ Ô˘¿ @¿ à¿ œ¿ ‘¿ ÷¿ ◊¿ Ò¿ ÒW¿ Ò[¿ Òñ¿ Ò‰¿ Ú+¿ ÚV¿ Úâ¿ Úç¿ Ú›¿ Û+¿ Û{¿ Û√¿ Û‹¿ Ù¿ Ù6¿ ÙE¿ Ùa¿ Ùã¿ Ù±¿ Ù¬¿ ı¿ ı	¿ ı*¿ ıO¿ ıp¿ ıq¿ ı}¿ ı¡¿ ı‰¿ ı˛¿ ˆ4¿ ˆb¿ ˆi¿ ˆm¿ ˆn¿ ˆz¿ ˆ—¿ ˆ‚¿ ˜¿ ˜6¿ ˜g¿ ˜k¿ ˜m¿ ˜n¿ ˜§¿ ˜ø¿ ˜Â¿ ¯¿ ¯5¿ ¯K¿ ¯h¿ ¯°¿ ¯“¿ ¯Ë¿ ˘¿ ˘ ¿ ˘!¿ ˘f¿ ˘í¿ ˘Æ¿ ˘’¿ ˘Û¿ ˙¿ ˙¿ ˙?¿ ˙V¿ ˙ã¿ ˙´¿ ˙Ø¿ ˙∞¿ ˙‰¿ ˚"¿ ˚B¿ ˚m¿ ˚ô¿ ˚ß¿ ˚≠¿ ˚“¿ ˚Ú¿ ˚ˆ¿ ˚˜¿ ¸-¿ ¸I¿ ¸p¿ ¸ó¿ ¸•¿ ¸´¿ ¸Ã¿ ¸Ï¿ ¸¿ ¸Ò¿ ¸˝¿ ˝D¿ ˝v¿ ˝ú¿ ˝ø¿ ˝Ã¿ ˛¿ ˛4¿ ˛l¿ ˛§¿ ˛◊¿ ˛›¿ ˛·¿ ˛‚¿ ˛ˇ¿ ˇ ¿ ˇ¿ ˇÄ¿ ˇ‹¿ ˇı¿ 0¿ >¿ D¿ E¿ ñ¿ ó¿ ≥¿ ˙¿6¿h¿™¿Î¿¿¿M¿Ç¿å¿©¿±¿∑¿„¿-¿Ä¿Ñ¿Ö¿ë¿´¿«¿ﬁ¿‚¿‰¿Â¿7¿E¿Ü¿í¿∫¿ª¿«¿Ò¿¿¿¿¿A¿]¿a¿b¿n¿â¿õ¿ü¿†¿¨¿—¿”¿‘¿‰¿Â¿&¿F¿ô¿µ¿Ù¿˙¿K¿j¿r¿s¿∏¿◊¿›¿-¿|¿ç¿é¿”¿	¿	¿	_¿	°¿	µ¿	À¿	Ã¿
¿
$¿
,¿
.¿
/¿
w¿
¡¿
ÿ¿
‹¿-¿t¿∞¿˜¿¿¿W¿¶¿ﬁ¿‚¿¿Ù¿?¿v¿«¿’¿¿D¿J¿õ¿™¿Õ¿‹¿¿$¿G¿e¿}¿§¿ﬂ¿¿H¿N¿O¿ú¿∞¿„¿‰¿¿"¿j¿∂¿„¿‰¿¿ ¿h¿≤¿›¿ﬁ¿+¿1¿Ä¿ ¿–¿‡¿Ê¿5¿Z¿ë¿í¿–¿÷¿˝¿5¿6¿n¿t¿∂¿¿E¿d¿e¿§¿™¿—¿Ù¿ı¿/¿5¿\¿Ö¿Ü¿¬¿»¿Ô¿¿¿)¿}¿~¿Œ¿˜¿˝¿ ¿&¿4¿ë¿õ¿°¿„¿1¿Ç¿¬¿»¿¿=¿C¿S¿Y¿•¿€¿#¿§¿—¿’¿÷¿&¿5¿;¿^¿d¿r¿…¿”¿Ÿ¿¿i¿∫¿˙¿ ¿P¿î¿ö¿Î¿ 
¿ ¿  ¿ &¿ s¿ ¿¿!¿!O¿!_¿!Ñ¿!º¿!‘¿"%¿"d¿"q¿"ç¿"‡¿#2¿#Å¿#—¿#˜¿$¿$¿$*¿$2¿$E¿$O¿$l¿$p¿$r¿$s¿$≠¿$±¿%¿%R¿%`¿%d¿%±¿%˜¿&?¿&Ç¿&¥¿'¿'3¿'f¿'≈¿(&¿('¿(Y¿(_¿(ö¿(†¿(Ó¿)¿)8¿)v¿)¨¿)∞¿)±¿)Â¿)Î¿*&¿*,¿*|¿*õ¿*»¿+¿+@¿+D¿+E¿+Q¿+f¿+õ¿+”¿+Ÿ¿,¿,J¿,P¿,g¿,k¿,l¿,x¿,µ¿,€¿-¿-¿-.¿-É¿-Ω¿.
¿..¿.c¿.û¿.Œ¿.˙¿/8¿/Å¿/û¿/”¿0¿0¿0¿0¿0.¿0á¿0√¿1¿14¿1k¿1®¿1⁄¿2¿2H¿2ë¿2Æ¿2Â¿3!¿3)¿3/¿33¿34¿3@¿3g¿3s¿3¡¿4	¿4¿4¿4n¿4∫¿4¡¿4¬¿4Ó¿5¿5?¿5i¿5ã¿5¡¿5˙¿60¿6[¿6å¿6∆¿7¿7¿7V¿7ë¿7—¿8¿8A¿8r¿8√¿8Ô¿9¿9Z¿9ô¿9’¿:¿:=¿:}¿:æ¿:ﬁ¿;¿;Z¿;†¿;Ÿ¿<¿<M¿<§¿<¸¿=¿=¿="¿=*¿=1¿=2¿=w¿=∞¿=±¿=‹¿>¿>¿>¿>"¿>#¿>/¿>B¿>n¿>ú¿>±¿>µ¿>∑¿>∏¿>Ó¿?(¿?e¿?à¿?«¿?¿@¿@6¿@<¿@=¿@}¿@~¿@ä¿@“¿@‘¿@’¿A¿A5¿AW¿Af¿Aá¿A´¿AÕ¿A„¿Aˆ¿B¿B-¿BM¿Bj¿BÉ¿Bû¿BŸ¿C2¿C3¿Cf¿Cò¿Cô¿C•¿Cı¿C˜¿C¯¿D5¿D¢¿E¿E¿E&¿E@¿EA¿E|¿Eà¿E∑¿E“¿EÓ¿F¿F4¿Fê¿F∂¿FΩ¿F…¿F÷¿G'¿Gx¿Gû¿G•¿G ¿GŒ¿Gœ¿G˚¿H¿HX¿H©¿HŸ¿H˛¿IK¿IX¿Iq¿Iw¿I{¿I|¿Ià¿I∫¿Iﬁ¿J¿J¿JB¿Jv¿Jú¿JÁ¿K¿K8¿K>¿Kb¿Kf¿Kg¿Ks¿Kß¿K‘¿K¯¿L¿L-¿LS¿Lv¿L∞¿LË¿M¿MK¿Mu¿M™¿M»¿M›¿N¿N\¿Nò¿N∏¿NÁ¿O#¿O7¿OU¿Oß¿O±¿O∑¿O‹¿O‡¿O·¿OÌ¿P#¿Ph¿Pò¿Pƒ¿PÍ¿Q¿QD¿QK¿Qí¿Q¬¿QÓ¿R¿RB¿Rn¿Ru¿Rv¿Rö¿R¿¿Rˆ¿S,¿S<¿Sb¿S~¿S≈¿S˚¿T¿T?¿Tt¿T©¿T⁄¿U	¿U5¿Uq¿U¢¿U—¿V¿V¿V¿V2¿VC¿Vr¿Vπ¿V’¿VÙ¿W;¿WK¿We¿Wë¿Wó¿W…¿WÕ¿WŒ¿W⁄¿X
¿X%¿X<¿Xw¿X≤¿XÒ¿Y-¿YH¿YO¿Yê¿YÃ¿YÁ¿YÓ¿YÔ¿Z¿Z9¿ZH¿Zw¿Z´¿Z—¿[¿[¿[J¿[N¿[O¿[[¿[x¿[ì¿[™¿[Œ¿[Ù¿\¿\2¿\f¿\å¿\æ¿\ƒ¿\„¿\Á¿\Ë¿\Ù¿]¿]8¿]^¿]∞¿]ƒ¿]Â¿]ı¿^$¿^X¿^~¿^ì¿^‚¿_/¿_y¿_»¿_¿`2¿`ê¿`Ë¿a¿a1¿a^¿aç¿aæ¿aÈ¿b¿b\¿bû¿b‡¿c<¿c}¿cø¿c–¿cﬂ¿cÏ¿d>¿då¿dŒ¿dÌ¿e¿e9¿es¿e—¿e›¿eÁ¿e˜¿e˝¿f¿f¿f¿fJ¿fÉ¿f™¿fÿ¿g¿g¿gN¿gt¿g¡¿g≈¿g«¿g»¿g˜¿h,¿hP¿h_¿hÉ¿hß¿h…¿hﬂ¿hÚ¿i
¿i)¿iI¿if¿i¿iö¿i’¿j1¿j2¿jg¿jö¿jõ¿jß¿j˚¿j˝¿j˛¿k=¿kh¿ki¿k÷¿lE¿lF¿lR¿ls¿l§¿l¯¿m¿m¿m ¿mn¿m∫¿n¿n¿nC¿n^¿nz¿n°¿n¿¿o¿oB¿oI¿oÉ¿o°¿o±¿oœ¿oÎ¿p¿p+¿p4¿pe¿pu¿pì¿pØ¿p≈¿pÔ¿p¯¿pˇ¿q ¿q-¿q1¿q2¿q>¿q^¿qÇ¿q®¿qÔ¿r¿r/¿r?¿rn¿r¢¿r»¿r›¿s(¿sw¿s»¿t¿td¿tÆ¿tÍ¿u<¿uä¿uÃ¿uÎ¿v¿v7¿vq¿vœ¿v€¿vÂ¿vı¿v˚¿vˇ¿w ¿w¿wH¿wÅ¿w®¿w÷¿wˇ¿x¿xL¿xr¿xø¿x√¿x≈    
Scrollable_ScrollableScopeScrollableState_ScrollableSelectionHandler _ScrollableSelectionHandlerState%_ScrollableSelectionContainerDelegate_getDeltaToScrollOrigin_ScrollSemantics_RenderScrollSemantics_RestorableScrollOffsetDiagonalDragBehaviorTwoDimensionalScrollableTwoDimensionalScrollableState_TwoDimensionalScrollableScope_VerticalOuterDimension_VerticalOuterDimensionState_HorizontalInnerDimension_HorizontalInnerDimensionState u¨